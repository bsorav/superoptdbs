=FunctionName: add_i32
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvadd(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1002, 1003, 1014, 1016, 999999
=live locs at E0.0.0
1002, 1003, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvadd(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvadd(1, 2) : BV:32
=Dependencies for loc 1001
1002, 1003, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvadd(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: alloca
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
C_LOCAL0 : src.llvm-%trgt.0 : 1234
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
ismemlabel-local.0
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : local.0 : BV:32
2 : memlabel-mem-local.0.1234.0 : MEMLABEL
3 : ismemlabel(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-alloca-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : local.0 : BV:32
2 : -1234xi8-* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
ismemlabel-local.0
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : local.0 : BV:32
2 : memlabel-mem-local.0.1234.0 : MEMLABEL
3 : ismemlabel(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : -1234xi8-* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.2.0.Invariant.1
=Comment
ismemlabel-local.0
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : local.0 : BV:32
2 : memlabel-mem-local.0.1234.0 : MEMLABEL
3 : ismemlabel(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : local.0 : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-local.0.1234.0 : MEMLABEL
3 : local.0 : BV:32
4 : 1234 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> BV:8]
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-local.0.1234.0
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1013, 1015, 999999
=live locs at L0.1.0
1013, 1015, 999999
=live locs at L0.2.0
1013, 1015, 999999
=live locs at E0.0.0
1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : local.0 : BV:32
=Dependencies for loc 1004

=Dependencies expr for loc 1012
1 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-local.0.1234.0 : MEMLABEL
3 : local.0 : BV:32
4 : 1234 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1012
1012, 
=Dependencies expr for loc 1016
1 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-local.0.1234.0 : MEMLABEL
3 : local.0 : BV:32
4 : 1234 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1016
1016, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : local.0 : BV:32
=Dependencies for loc 1001

=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1004
1 : local.0 : BV:32
=Dependencies for loc 1004

=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: and
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BOOL
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BOOL
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BOOL
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BOOL
2 : input.src.llvm-%a1_ARG : BOOL
3 : and(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BOOL
2 : pred_dependency_keyword.1003 : BOOL
3 : and(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: ashr
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvashr(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvashr(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: branch
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BOOL
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%2
1 : input.src.llvm-%2 : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BOOL
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L1.1.0

=Node: L1.2.0

=Node: L3.1.0
=L3.1.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L1.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L1.1.0 => L1.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%2
1 : 0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=Edge: L1.2.0 => L1.1.0
=EdgeCond: 
1 : input.src.llvm-%a0_ARG : BOOL
=StateTo: 
=Edge: L1.2.0 => L3.1.0
=EdgeCond: 
1 : input.src.llvm-%a0_ARG : BOOL
2 : not(1) : BOOL
=StateTo: 
=Edge: L3.1.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%2
=Loc 1003.
src.llvm-%a0_ARG
=Loc 1004.
src.llvm-%a1_ARG
=Loc 1005.
src.llvm-%a2_ARG
=Loc 1006.
src.llvm-%a3_ARG
=Loc 1007.
src.llvm-%hidden-reg
=Loc 1008.
src.llvm-callee-save.0
=Loc 1009.
src.llvm-callee-save.1
=Loc 1010.
src.llvm-callee-save.2
=Loc 1011.
src.llvm-callee-save.3
=Loc 1012.
src.llvm-contains_float_op
=Loc 1013.
src.llvm-contains_unsupported_op
=Loc 1014.
src.llvm-indir_tgt
=Loc 1015.
src.llvm-mem
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3

=Liveness
=live locs at L0.0.0
1003, 1016, 1018, 999999
=live locs at L0.1.0
1003, 1016, 1018, 999999
=live locs at L1.1.0
1003, 1016, 1018, 999999
=live locs at L1.2.0
1003, 1016, 1018, 999999
=live locs at L3.1.0
1016, 1018, 999999
=live locs at E0.0.0
1016, 1018

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L1.1.0
=Dependencies for edge: L1.1.0 => L1.2.0
=Dependencies expr for loc 1002
1 : 1 : BV:32
=Dependencies for loc 1002

=Dependencies for edge: L1.2.0 => L1.1.0
=Dependencies expr for loc 1002
1 : 1 : BV:32
=Dependencies for loc 1002

=Dependencies for edge: L1.2.0 => L3.1.0
=Dependencies expr for loc 1002
1 : 1 : BV:32
=Dependencies for loc 1002

=Dependencies for edge: L3.1.0 => E0.0.0
=Dependencies expr for loc 1001
1 : 0 : BV:32
=Dependencies for loc 1001

=Dependencies expr for loc 1002
1 : 1 : BV:32
=Dependencies for loc 1002

=Dependencies expr for loc 1007
1 : pred_dependency_keyword.1007 : BV:32
2 : pred_dependency_keyword.1008 : BV:32
3 : pred_dependency_keyword.1009 : BV:32
4 : pred_dependency_keyword.1010 : BV:32
5 : pred_dependency_keyword.1011 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1007
1007, 1008, 1009, 1010, 1011, 
=Dependencies expr for loc 1014
1 : retaddr_const : BV:32
=Dependencies for loc 1014


=FunctionName: bvand
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvand(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvand(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: bvor
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvor(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvor(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: bvxor
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvxor(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvxor(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: bvxor1
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : 4294967295 : BV:32
3 : bvxor(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BV:32
2 : bvnot(1) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: call_0
=TFG:
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_0
=Locals-map:
=StartState:
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0

=Node: L0.1.0

=Node: L0.1.100001

=Node: L0.1.100002

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : function_call(1, 2, 3, 4, 5, 6, 4) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%hidden-reg
=Loc 1002.
src.llvm-callee-save.0
=Loc 1003.
src.llvm-callee-save.1
=Loc 1004.
src.llvm-callee-save.2
=Loc 1005.
src.llvm-callee-save.3
=Loc 1006.
src.llvm-contains_float_op
=Loc 1007.
src.llvm-contains_unsupported_op
=Loc 1008.
src.llvm-indir_tgt
=Loc 1009.
src.llvm-mem
=Loc 1010.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1011.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1012.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1

=Liveness
=live locs at L0.0.0
1010, 1011, 1012, 999999
=live locs at L0.1.0
1010, 1011, 1012, 999999
=live locs at L0.1.100001
1010, 1011, 1012, 999999
=live locs at L0.1.100002
1010, 1012, 999999
=live locs at L0.2.0
1010, 1012, 999999
=live locs at E0.0.0
1010, 1012

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1009
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap : MEMLABEL
4 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1010 : ARRAY[BV:32 -> BV:8]
7 : memsplice(1, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : nextpc_const.1 : BV:32
9 : 0 : REGID
10 : (() -> 0) : ARRAY[BV:32 -> BV:8]
11 : function_call(2, 3, 3, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : memmask(11, 1) : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-esp : MEMLABEL
14 : pred_dependency_keyword.1011 : ARRAY[BV:32 -> BV:8]
15 : memmask(11, 5) : ARRAY[BV:32 -> BV:8]
16 : memsplice(1, 12, 13, 14, 5, 15) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1009
1010, 1011, 1012, 
=Dependencies expr for loc 1010
1 : call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1010 : ARRAY[BV:32 -> BV:8]
7 : memsplice(3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : nextpc_const.1 : BV:32
9 : 0 : REGID
10 : (() -> 0) : ARRAY[BV:32 -> BV:8]
11 : function_call(1, 2, 2, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : memmask(11, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1010
1010, 1011, 1012, 
=Dependencies expr for loc 1012
1 : call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1010 : ARRAY[BV:32 -> BV:8]
7 : memsplice(3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : nextpc_const.1 : BV:32
9 : 0 : REGID
10 : (() -> 0) : ARRAY[BV:32 -> BV:8]
11 : function_call(1, 2, 2, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : memmask(11, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1012
1010, 1011, 1012, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1001 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : pred_dependency_keyword.1003 : BV:32
4 : pred_dependency_keyword.1004 : BV:32
5 : pred_dependency_keyword.1005 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1001
1001, 1002, 1003, 1004, 1005, 
=Dependencies expr for loc 1008
1 : retaddr_const : BV:32
=Dependencies for loc 1008


=FunctionName: call_1
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_1
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001

=Node: L0.1.100002

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 4, 7) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%hidden-reg
=Loc 1003.
src.llvm-callee-save.0
=Loc 1004.
src.llvm-callee-save.1
=Loc 1005.
src.llvm-callee-save.2
=Loc 1006.
src.llvm-callee-save.3
=Loc 1007.
src.llvm-contains_float_op
=Loc 1008.
src.llvm-contains_unsupported_op
=Loc 1009.
src.llvm-indir_tgt
=Loc 1010.
src.llvm-mem
=Loc 1011.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1012.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1001, 1011, 1012, 1013, 1014, 999999
=live locs at L0.1.0
1001, 1011, 1012, 1013, 1014, 999999
=live locs at L0.1.100001
1001, 1011, 1012, 1013, 1014, 999999
=live locs at L0.1.100002
1011, 1013, 999999
=live locs at L0.2.0
1011, 1013, 999999
=live locs at E0.0.0
1011, 1013

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1010
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0 : MEMLABEL
4 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1011 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
9 : memsplice(1, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : nextpc_const.1 : BV:32
11 : 0 : REGID
12 : (() -> 0) : ARRAY[BV:32 -> BV:8]
13 : pred_dependency_keyword.1001 : BV:32
14 : function_call(2, 3, 3, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
15 : memmask(14, 1) : ARRAY[BV:32 -> BV:8]
16 : memlabel-mem-esp : MEMLABEL
17 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
18 : memmask(14, 5) : ARRAY[BV:32 -> BV:8]
19 : memmask(14, 7) : ARRAY[BV:32 -> BV:8]
20 : memsplice(1, 15, 16, 17, 5, 18, 7, 19) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1010
1001, 1011, 1012, 1013, 1014, 
=Dependencies expr for loc 1011
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1011 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
9 : memsplice(3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : nextpc_const.1 : BV:32
11 : 0 : REGID
12 : (() -> 0) : ARRAY[BV:32 -> BV:8]
13 : pred_dependency_keyword.1001 : BV:32
14 : function_call(1, 2, 2, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
15 : memmask(14, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1011
1001, 1011, 1012, 1013, 1014, 
=Dependencies expr for loc 1013
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1011 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
9 : memsplice(3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : nextpc_const.1 : BV:32
11 : 0 : REGID
12 : (() -> 0) : ARRAY[BV:32 -> BV:8]
13 : pred_dependency_keyword.1001 : BV:32
14 : function_call(1, 2, 2, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
15 : memmask(14, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1013
1001, 1011, 1012, 1013, 1014, 
=Dependencies expr for loc 1014
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1011 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
9 : memsplice(3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : nextpc_const.1 : BV:32
11 : 0 : REGID
12 : (() -> 0) : ARRAY[BV:32 -> BV:8]
13 : pred_dependency_keyword.1001 : BV:32
14 : function_call(1, 2, 2, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
15 : memmask(14, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1014
1001, 1011, 1012, 1013, 1014, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1002
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : pred_dependency_keyword.1004 : BV:32
4 : pred_dependency_keyword.1005 : BV:32
5 : pred_dependency_keyword.1006 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1002
1002, 1003, 1004, 1005, 1006, 
=Dependencies expr for loc 1009
1 : retaddr_const : BV:32
=Dependencies for loc 1009


=FunctionName: call_2
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_2
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001

=Node: L0.1.100002

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%a1_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-callee-save.0
=Loc 1005.
src.llvm-callee-save.1
=Loc 1006.
src.llvm-callee-save.2
=Loc 1007.
src.llvm-callee-save.3
=Loc 1008.
src.llvm-contains_float_op
=Loc 1009.
src.llvm-contains_unsupported_op
=Loc 1010.
src.llvm-indir_tgt
=Loc 1011.
src.llvm-mem
=Loc 1012.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1001, 1002, 1012, 1013, 1014, 1015, 1016, 999999
=live locs at L0.1.0
1001, 1002, 1012, 1013, 1014, 1015, 1016, 999999
=live locs at L0.1.100001
1001, 1002, 1012, 1013, 1014, 1015, 1016, 999999
=live locs at L0.1.100002
1012, 1014, 999999
=live locs at L0.2.0
1012, 1014, 999999
=live locs at E0.0.0
1012, 1014

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1011
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
4 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
11 : memsplice(1, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 0 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1001 : BV:32
16 : pred_dependency_keyword.1002 : BV:32
17 : function_call(2, 3, 3, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 1) : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-esp : MEMLABEL
20 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
21 : memmask(17, 5) : ARRAY[BV:32 -> BV:8]
22 : memmask(17, 7) : ARRAY[BV:32 -> BV:8]
23 : memmask(17, 9) : ARRAY[BV:32 -> BV:8]
24 : memsplice(1, 18, 19, 20, 5, 21, 7, 22, 9, 23) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1011
1001, 1002, 1012, 1013, 1014, 1015, 1016, 
=Dependencies expr for loc 1012
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
11 : memsplice(3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 0 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1001 : BV:32
16 : pred_dependency_keyword.1002 : BV:32
17 : function_call(1, 2, 2, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1012
1001, 1002, 1012, 1013, 1014, 1015, 1016, 
=Dependencies expr for loc 1014
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
11 : memsplice(3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 0 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1001 : BV:32
16 : pred_dependency_keyword.1002 : BV:32
17 : function_call(1, 2, 2, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1014
1001, 1002, 1012, 1013, 1014, 1015, 1016, 
=Dependencies expr for loc 1015
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
11 : memsplice(3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 0 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1001 : BV:32
16 : pred_dependency_keyword.1002 : BV:32
17 : function_call(1, 2, 2, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1015
1001, 1002, 1012, 1013, 1014, 1015, 1016, 
=Dependencies expr for loc 1016
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
11 : memsplice(3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 0 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1001 : BV:32
16 : pred_dependency_keyword.1002 : BV:32
17 : function_call(1, 2, 2, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1016
1001, 1002, 1012, 1013, 1014, 1015, 1016, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1004 : BV:32
3 : pred_dependency_keyword.1005 : BV:32
4 : pred_dependency_keyword.1006 : BV:32
5 : pred_dependency_keyword.1007 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1004, 1005, 1006, 1007, 
=Dependencies expr for loc 1010
1 : retaddr_const : BV:32
=Dependencies for loc 1010


=FunctionName: call_3
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_3
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001

=Node: L0.1.100002

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%a1_ARG
=Loc 1003.
src.llvm-%a2_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2

=Liveness
=live locs at L0.0.0
1001, 1002, 1003, 1013, 1014, 1015, 1016, 1017, 1018, 999999
=live locs at L0.1.0
1001, 1002, 1003, 1013, 1014, 1015, 1016, 1017, 1018, 999999
=live locs at L0.1.100001
1001, 1002, 1003, 1013, 1014, 1015, 1016, 1017, 1018, 999999
=live locs at L0.1.100002
1013, 1015, 999999
=live locs at L0.2.0
1013, 1015, 999999
=live locs at E0.0.0
1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1012
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
13 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1001 : BV:32
18 : pred_dependency_keyword.1002 : BV:32
19 : pred_dependency_keyword.1003 : BV:32
20 : function_call(2, 3, 3, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 1) : ARRAY[BV:32 -> BV:8]
22 : memlabel-mem-esp : MEMLABEL
23 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
24 : memmask(20, 5) : ARRAY[BV:32 -> BV:8]
25 : memmask(20, 7) : ARRAY[BV:32 -> BV:8]
26 : memmask(20, 9) : ARRAY[BV:32 -> BV:8]
27 : memmask(20, 11) : ARRAY[BV:32 -> BV:8]
28 : memsplice(1, 21, 22, 23, 5, 24, 7, 25, 9, 26, 11, 27) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1012
1001, 1002, 1003, 1013, 1014, 1015, 1016, 1017, 1018, 
=Dependencies expr for loc 1013
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1001 : BV:32
18 : pred_dependency_keyword.1002 : BV:32
19 : pred_dependency_keyword.1003 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1013
1001, 1002, 1003, 1013, 1014, 1015, 1016, 1017, 1018, 
=Dependencies expr for loc 1015
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1001 : BV:32
18 : pred_dependency_keyword.1002 : BV:32
19 : pred_dependency_keyword.1003 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1015
1001, 1002, 1003, 1013, 1014, 1015, 1016, 1017, 1018, 
=Dependencies expr for loc 1016
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1001 : BV:32
18 : pred_dependency_keyword.1002 : BV:32
19 : pred_dependency_keyword.1003 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1016
1001, 1002, 1003, 1013, 1014, 1015, 1016, 1017, 1018, 
=Dependencies expr for loc 1017
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1001 : BV:32
18 : pred_dependency_keyword.1002 : BV:32
19 : pred_dependency_keyword.1003 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1001, 1002, 1003, 1013, 1014, 1015, 1016, 1017, 1018, 
=Dependencies expr for loc 1018
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1001 : BV:32
18 : pred_dependency_keyword.1002 : BV:32
19 : pred_dependency_keyword.1003 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1018
1001, 1002, 1003, 1013, 1014, 1015, 1016, 1017, 1018, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: call_4
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_4
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001

=Node: L0.1.100002

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%a1_ARG
=Loc 1003.
src.llvm-%a2_ARG
=Loc 1004.
src.llvm-%a3_ARG
=Loc 1005.
src.llvm-%hidden-reg
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3

=Liveness
=live locs at L0.0.0
1001, 1002, 1003, 1004, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 999999
=live locs at L0.1.0
1001, 1002, 1003, 1004, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 999999
=live locs at L0.1.100001
1001, 1002, 1003, 1004, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 999999
=live locs at L0.1.100002
1014, 1016, 999999
=live locs at L0.2.0
1014, 1016, 999999
=live locs at E0.0.0
1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1013
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
15 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1001 : BV:32
20 : pred_dependency_keyword.1002 : BV:32
21 : pred_dependency_keyword.1003 : BV:32
22 : pred_dependency_keyword.1004 : BV:32
23 : function_call(2, 3, 3, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 1) : ARRAY[BV:32 -> BV:8]
25 : memlabel-mem-esp : MEMLABEL
26 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
27 : memmask(23, 5) : ARRAY[BV:32 -> BV:8]
28 : memmask(23, 7) : ARRAY[BV:32 -> BV:8]
29 : memmask(23, 9) : ARRAY[BV:32 -> BV:8]
30 : memmask(23, 11) : ARRAY[BV:32 -> BV:8]
31 : memmask(23, 13) : ARRAY[BV:32 -> BV:8]
32 : memsplice(1, 24, 25, 26, 5, 27, 7, 28, 9, 29, 11, 30, 13, 31) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1013
1001, 1002, 1003, 1004, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1014
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1001 : BV:32
20 : pred_dependency_keyword.1002 : BV:32
21 : pred_dependency_keyword.1003 : BV:32
22 : pred_dependency_keyword.1004 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1014
1001, 1002, 1003, 1004, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1016
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1001 : BV:32
20 : pred_dependency_keyword.1002 : BV:32
21 : pred_dependency_keyword.1003 : BV:32
22 : pred_dependency_keyword.1004 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1016
1001, 1002, 1003, 1004, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1017
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1001 : BV:32
20 : pred_dependency_keyword.1002 : BV:32
21 : pred_dependency_keyword.1003 : BV:32
22 : pred_dependency_keyword.1004 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1001, 1002, 1003, 1004, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1018
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1001 : BV:32
20 : pred_dependency_keyword.1002 : BV:32
21 : pred_dependency_keyword.1003 : BV:32
22 : pred_dependency_keyword.1004 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1018
1001, 1002, 1003, 1004, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1019
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1001 : BV:32
20 : pred_dependency_keyword.1002 : BV:32
21 : pred_dependency_keyword.1003 : BV:32
22 : pred_dependency_keyword.1004 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1019
1001, 1002, 1003, 1004, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1020
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1001 : BV:32
20 : pred_dependency_keyword.1002 : BV:32
21 : pred_dependency_keyword.1003 : BV:32
22 : pred_dependency_keyword.1004 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 13) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1020
1001, 1002, 1003, 1004, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1005 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1005
1005, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: call_5
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Input: llvm-method-arg.4
1 : input.src.llvm-%a4_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_5
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%a4_ARG
1 : input.src.llvm-%a4_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.4
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a4_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001

=Node: L0.1.100002

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%a1_ARG
=Loc 1003.
src.llvm-%a2_ARG
=Loc 1004.
src.llvm-%a3_ARG
=Loc 1005.
src.llvm-%a4_ARG
=Loc 1006.
src.llvm-%hidden-reg
=Loc 1007.
src.llvm-callee-save.0
=Loc 1008.
src.llvm-callee-save.1
=Loc 1009.
src.llvm-callee-save.2
=Loc 1010.
src.llvm-callee-save.3
=Loc 1011.
src.llvm-contains_float_op
=Loc 1012.
src.llvm-contains_unsupported_op
=Loc 1013.
src.llvm-indir_tgt
=Loc 1014.
src.llvm-mem
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.4

=Liveness
=live locs at L0.0.0
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 999999
=live locs at L0.1.0
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 999999
=live locs at L0.1.100001
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 999999
=live locs at L0.1.100002
1015, 1017, 999999
=live locs at L0.2.0
1015, 1017, 999999
=live locs at E0.0.0
1015, 1017

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1014
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
17 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1001 : BV:32
22 : pred_dependency_keyword.1002 : BV:32
23 : pred_dependency_keyword.1003 : BV:32
24 : pred_dependency_keyword.1004 : BV:32
25 : pred_dependency_keyword.1005 : BV:32
26 : function_call(2, 3, 3, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 1) : ARRAY[BV:32 -> BV:8]
28 : memlabel-mem-esp : MEMLABEL
29 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
30 : memmask(26, 5) : ARRAY[BV:32 -> BV:8]
31 : memmask(26, 7) : ARRAY[BV:32 -> BV:8]
32 : memmask(26, 9) : ARRAY[BV:32 -> BV:8]
33 : memmask(26, 11) : ARRAY[BV:32 -> BV:8]
34 : memmask(26, 13) : ARRAY[BV:32 -> BV:8]
35 : memmask(26, 15) : ARRAY[BV:32 -> BV:8]
36 : memsplice(1, 27, 28, 29, 5, 30, 7, 31, 9, 32, 11, 33, 13, 34, 15, 35) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1014
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1015
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1001 : BV:32
22 : pred_dependency_keyword.1002 : BV:32
23 : pred_dependency_keyword.1003 : BV:32
24 : pred_dependency_keyword.1004 : BV:32
25 : pred_dependency_keyword.1005 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1015
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1017
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1001 : BV:32
22 : pred_dependency_keyword.1002 : BV:32
23 : pred_dependency_keyword.1003 : BV:32
24 : pred_dependency_keyword.1004 : BV:32
25 : pred_dependency_keyword.1005 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1018
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1001 : BV:32
22 : pred_dependency_keyword.1002 : BV:32
23 : pred_dependency_keyword.1003 : BV:32
24 : pred_dependency_keyword.1004 : BV:32
25 : pred_dependency_keyword.1005 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1018
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1019
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1001 : BV:32
22 : pred_dependency_keyword.1002 : BV:32
23 : pred_dependency_keyword.1003 : BV:32
24 : pred_dependency_keyword.1004 : BV:32
25 : pred_dependency_keyword.1005 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1019
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1020
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1001 : BV:32
22 : pred_dependency_keyword.1002 : BV:32
23 : pred_dependency_keyword.1003 : BV:32
24 : pred_dependency_keyword.1004 : BV:32
25 : pred_dependency_keyword.1005 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1020
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1021
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1001 : BV:32
22 : pred_dependency_keyword.1002 : BV:32
23 : pred_dependency_keyword.1003 : BV:32
24 : pred_dependency_keyword.1004 : BV:32
25 : pred_dependency_keyword.1005 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 13) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1021
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1022
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1001 : BV:32
22 : pred_dependency_keyword.1002 : BV:32
23 : pred_dependency_keyword.1003 : BV:32
24 : pred_dependency_keyword.1004 : BV:32
25 : pred_dependency_keyword.1005 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 15) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1022
1001, 1002, 1003, 1004, 1005, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1006
1 : pred_dependency_keyword.1006 : BV:32
2 : pred_dependency_keyword.1007 : BV:32
3 : pred_dependency_keyword.1008 : BV:32
4 : pred_dependency_keyword.1009 : BV:32
5 : pred_dependency_keyword.1010 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1006
1006, 1007, 1008, 1009, 1010, 
=Dependencies expr for loc 1013
1 : retaddr_const : BV:32
=Dependencies for loc 1013


=FunctionName: call_6
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Input: llvm-method-arg.4
1 : input.src.llvm-%a4_ARG : BV:32
=Input: llvm-method-arg.5
1 : input.src.llvm-%a5_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_6
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%a4_ARG
1 : input.src.llvm-%a4_ARG : BV:32
=src.llvm-%a5_ARG
1 : input.src.llvm-%a5_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a4_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.4
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.5
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a5_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001

=Node: L0.1.100002

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%a1_ARG
=Loc 1003.
src.llvm-%a2_ARG
=Loc 1004.
src.llvm-%a3_ARG
=Loc 1005.
src.llvm-%a4_ARG
=Loc 1006.
src.llvm-%a5_ARG
=Loc 1007.
src.llvm-%hidden-reg
=Loc 1008.
src.llvm-callee-save.0
=Loc 1009.
src.llvm-callee-save.1
=Loc 1010.
src.llvm-callee-save.2
=Loc 1011.
src.llvm-callee-save.3
=Loc 1012.
src.llvm-contains_float_op
=Loc 1013.
src.llvm-contains_unsupported_op
=Loc 1014.
src.llvm-indir_tgt
=Loc 1015.
src.llvm-mem
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3
=Loc 1023.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.4
=Loc 1024.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.5

=Liveness
=live locs at L0.0.0
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 999999
=live locs at L0.1.0
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 999999
=live locs at L0.1.100001
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 999999
=live locs at L0.1.100002
1016, 1018, 999999
=live locs at L0.2.0
1016, 1018, 999999
=live locs at E0.0.0
1016, 1018

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1015
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
19 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1001 : BV:32
24 : pred_dependency_keyword.1002 : BV:32
25 : pred_dependency_keyword.1003 : BV:32
26 : pred_dependency_keyword.1004 : BV:32
27 : pred_dependency_keyword.1005 : BV:32
28 : pred_dependency_keyword.1006 : BV:32
29 : function_call(2, 3, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 1) : ARRAY[BV:32 -> BV:8]
31 : memlabel-mem-esp : MEMLABEL
32 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
33 : memmask(29, 5) : ARRAY[BV:32 -> BV:8]
34 : memmask(29, 7) : ARRAY[BV:32 -> BV:8]
35 : memmask(29, 9) : ARRAY[BV:32 -> BV:8]
36 : memmask(29, 11) : ARRAY[BV:32 -> BV:8]
37 : memmask(29, 13) : ARRAY[BV:32 -> BV:8]
38 : memmask(29, 15) : ARRAY[BV:32 -> BV:8]
39 : memmask(29, 17) : ARRAY[BV:32 -> BV:8]
40 : memsplice(1, 30, 31, 32, 5, 33, 7, 34, 9, 35, 11, 36, 13, 37, 15, 38, 17, 39) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1015
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1016
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1001 : BV:32
24 : pred_dependency_keyword.1002 : BV:32
25 : pred_dependency_keyword.1003 : BV:32
26 : pred_dependency_keyword.1004 : BV:32
27 : pred_dependency_keyword.1005 : BV:32
28 : pred_dependency_keyword.1006 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1016
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1018
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1001 : BV:32
24 : pred_dependency_keyword.1002 : BV:32
25 : pred_dependency_keyword.1003 : BV:32
26 : pred_dependency_keyword.1004 : BV:32
27 : pred_dependency_keyword.1005 : BV:32
28 : pred_dependency_keyword.1006 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1018
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1019
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1001 : BV:32
24 : pred_dependency_keyword.1002 : BV:32
25 : pred_dependency_keyword.1003 : BV:32
26 : pred_dependency_keyword.1004 : BV:32
27 : pred_dependency_keyword.1005 : BV:32
28 : pred_dependency_keyword.1006 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1019
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1020
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1001 : BV:32
24 : pred_dependency_keyword.1002 : BV:32
25 : pred_dependency_keyword.1003 : BV:32
26 : pred_dependency_keyword.1004 : BV:32
27 : pred_dependency_keyword.1005 : BV:32
28 : pred_dependency_keyword.1006 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1020
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1021
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1001 : BV:32
24 : pred_dependency_keyword.1002 : BV:32
25 : pred_dependency_keyword.1003 : BV:32
26 : pred_dependency_keyword.1004 : BV:32
27 : pred_dependency_keyword.1005 : BV:32
28 : pred_dependency_keyword.1006 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1021
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1022
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1001 : BV:32
24 : pred_dependency_keyword.1002 : BV:32
25 : pred_dependency_keyword.1003 : BV:32
26 : pred_dependency_keyword.1004 : BV:32
27 : pred_dependency_keyword.1005 : BV:32
28 : pred_dependency_keyword.1006 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 13) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1022
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1023
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1001 : BV:32
24 : pred_dependency_keyword.1002 : BV:32
25 : pred_dependency_keyword.1003 : BV:32
26 : pred_dependency_keyword.1004 : BV:32
27 : pred_dependency_keyword.1005 : BV:32
28 : pred_dependency_keyword.1006 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 15) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1023
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1024
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1001 : BV:32
24 : pred_dependency_keyword.1002 : BV:32
25 : pred_dependency_keyword.1003 : BV:32
26 : pred_dependency_keyword.1004 : BV:32
27 : pred_dependency_keyword.1005 : BV:32
28 : pred_dependency_keyword.1006 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 17) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1024
1001, 1002, 1003, 1004, 1005, 1006, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1007
1 : pred_dependency_keyword.1007 : BV:32
2 : pred_dependency_keyword.1008 : BV:32
3 : pred_dependency_keyword.1009 : BV:32
4 : pred_dependency_keyword.1010 : BV:32
5 : pred_dependency_keyword.1011 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1007
1007, 1008, 1009, 1010, 1011, 
=Dependencies expr for loc 1014
1 : retaddr_const : BV:32
=Dependencies for loc 1014


=FunctionName: call_7
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Input: llvm-method-arg.4
1 : input.src.llvm-%a4_ARG : BV:32
=Input: llvm-method-arg.5
1 : input.src.llvm-%a5_ARG : BV:32
=Input: llvm-method-arg.6
1 : input.src.llvm-%a6_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_7
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%a4_ARG
1 : input.src.llvm-%a4_ARG : BV:32
=src.llvm-%a5_ARG
1 : input.src.llvm-%a5_ARG : BV:32
=src.llvm-%a6_ARG
1 : input.src.llvm-%a6_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.4
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a4_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.5
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a6_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.6
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a5_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001

=Node: L0.1.100002

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : input.src.llvm-%a6_ARG : BV:32
14 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%a1_ARG
=Loc 1003.
src.llvm-%a2_ARG
=Loc 1004.
src.llvm-%a3_ARG
=Loc 1005.
src.llvm-%a4_ARG
=Loc 1006.
src.llvm-%a5_ARG
=Loc 1007.
src.llvm-%a6_ARG
=Loc 1008.
src.llvm-%hidden-reg
=Loc 1009.
src.llvm-callee-save.0
=Loc 1010.
src.llvm-callee-save.1
=Loc 1011.
src.llvm-callee-save.2
=Loc 1012.
src.llvm-callee-save.3
=Loc 1013.
src.llvm-contains_float_op
=Loc 1014.
src.llvm-contains_unsupported_op
=Loc 1015.
src.llvm-indir_tgt
=Loc 1016.
src.llvm-mem
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1023.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3
=Loc 1024.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.4
=Loc 1025.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.5
=Loc 1026.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.6

=Liveness
=live locs at L0.0.0
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 999999
=live locs at L0.1.0
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 999999
=live locs at L0.1.100001
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 999999
=live locs at L0.1.100002
1017, 1019, 999999
=live locs at L0.2.0
1017, 1019, 999999
=live locs at E0.0.0
1017, 1019

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1016
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
21 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1001 : BV:32
26 : pred_dependency_keyword.1002 : BV:32
27 : pred_dependency_keyword.1003 : BV:32
28 : pred_dependency_keyword.1004 : BV:32
29 : pred_dependency_keyword.1005 : BV:32
30 : pred_dependency_keyword.1006 : BV:32
31 : pred_dependency_keyword.1007 : BV:32
32 : function_call(2, 3, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 1) : ARRAY[BV:32 -> BV:8]
34 : memlabel-mem-esp : MEMLABEL
35 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
36 : memmask(32, 5) : ARRAY[BV:32 -> BV:8]
37 : memmask(32, 7) : ARRAY[BV:32 -> BV:8]
38 : memmask(32, 9) : ARRAY[BV:32 -> BV:8]
39 : memmask(32, 11) : ARRAY[BV:32 -> BV:8]
40 : memmask(32, 13) : ARRAY[BV:32 -> BV:8]
41 : memmask(32, 15) : ARRAY[BV:32 -> BV:8]
42 : memmask(32, 17) : ARRAY[BV:32 -> BV:8]
43 : memmask(32, 19) : ARRAY[BV:32 -> BV:8]
44 : memsplice(1, 33, 34, 35, 5, 36, 7, 37, 9, 38, 11, 39, 13, 40, 15, 41, 17, 42, 19, 43) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1016
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1017
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1001 : BV:32
26 : pred_dependency_keyword.1002 : BV:32
27 : pred_dependency_keyword.1003 : BV:32
28 : pred_dependency_keyword.1004 : BV:32
29 : pred_dependency_keyword.1005 : BV:32
30 : pred_dependency_keyword.1006 : BV:32
31 : pred_dependency_keyword.1007 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1019
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1001 : BV:32
26 : pred_dependency_keyword.1002 : BV:32
27 : pred_dependency_keyword.1003 : BV:32
28 : pred_dependency_keyword.1004 : BV:32
29 : pred_dependency_keyword.1005 : BV:32
30 : pred_dependency_keyword.1006 : BV:32
31 : pred_dependency_keyword.1007 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1019
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1020
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1001 : BV:32
26 : pred_dependency_keyword.1002 : BV:32
27 : pred_dependency_keyword.1003 : BV:32
28 : pred_dependency_keyword.1004 : BV:32
29 : pred_dependency_keyword.1005 : BV:32
30 : pred_dependency_keyword.1006 : BV:32
31 : pred_dependency_keyword.1007 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1020
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1021
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1001 : BV:32
26 : pred_dependency_keyword.1002 : BV:32
27 : pred_dependency_keyword.1003 : BV:32
28 : pred_dependency_keyword.1004 : BV:32
29 : pred_dependency_keyword.1005 : BV:32
30 : pred_dependency_keyword.1006 : BV:32
31 : pred_dependency_keyword.1007 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1021
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1022
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1001 : BV:32
26 : pred_dependency_keyword.1002 : BV:32
27 : pred_dependency_keyword.1003 : BV:32
28 : pred_dependency_keyword.1004 : BV:32
29 : pred_dependency_keyword.1005 : BV:32
30 : pred_dependency_keyword.1006 : BV:32
31 : pred_dependency_keyword.1007 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1022
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1023
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1001 : BV:32
26 : pred_dependency_keyword.1002 : BV:32
27 : pred_dependency_keyword.1003 : BV:32
28 : pred_dependency_keyword.1004 : BV:32
29 : pred_dependency_keyword.1005 : BV:32
30 : pred_dependency_keyword.1006 : BV:32
31 : pred_dependency_keyword.1007 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 13) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1023
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1024
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1001 : BV:32
26 : pred_dependency_keyword.1002 : BV:32
27 : pred_dependency_keyword.1003 : BV:32
28 : pred_dependency_keyword.1004 : BV:32
29 : pred_dependency_keyword.1005 : BV:32
30 : pred_dependency_keyword.1006 : BV:32
31 : pred_dependency_keyword.1007 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 15) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1024
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1025
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1001 : BV:32
26 : pred_dependency_keyword.1002 : BV:32
27 : pred_dependency_keyword.1003 : BV:32
28 : pred_dependency_keyword.1004 : BV:32
29 : pred_dependency_keyword.1005 : BV:32
30 : pred_dependency_keyword.1006 : BV:32
31 : pred_dependency_keyword.1007 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 17) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1025
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1026
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1001 : BV:32
26 : pred_dependency_keyword.1002 : BV:32
27 : pred_dependency_keyword.1003 : BV:32
28 : pred_dependency_keyword.1004 : BV:32
29 : pred_dependency_keyword.1005 : BV:32
30 : pred_dependency_keyword.1006 : BV:32
31 : pred_dependency_keyword.1007 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 19) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1026
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1008
1 : pred_dependency_keyword.1008 : BV:32
2 : pred_dependency_keyword.1009 : BV:32
3 : pred_dependency_keyword.1010 : BV:32
4 : pred_dependency_keyword.1011 : BV:32
5 : pred_dependency_keyword.1012 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1008
1008, 1009, 1010, 1011, 1012, 
=Dependencies expr for loc 1015
1 : retaddr_const : BV:32
=Dependencies for loc 1015


=FunctionName: call_8
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Input: llvm-method-arg.4
1 : input.src.llvm-%a4_ARG : BV:32
=Input: llvm-method-arg.5
1 : input.src.llvm-%a5_ARG : BV:32
=Input: llvm-method-arg.6
1 : input.src.llvm-%a6_ARG : BV:32
=Input: llvm-method-arg.7
1 : input.src.llvm-%a7_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_8
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%a4_ARG
1 : input.src.llvm-%a4_ARG : BV:32
=src.llvm-%a5_ARG
1 : input.src.llvm-%a5_ARG : BV:32
=src.llvm-%a6_ARG
1 : input.src.llvm-%a6_ARG : BV:32
=src.llvm-%a7_ARG
1 : input.src.llvm-%a7_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a5_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.4
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a4_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.5
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a6_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.6
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.7
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a7_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001

=Node: L0.1.100002

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : input.src.llvm-%a6_ARG : BV:32
14 : input.src.llvm-%a7_ARG : BV:32
15 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%a1_ARG
=Loc 1003.
src.llvm-%a2_ARG
=Loc 1004.
src.llvm-%a3_ARG
=Loc 1005.
src.llvm-%a4_ARG
=Loc 1006.
src.llvm-%a5_ARG
=Loc 1007.
src.llvm-%a6_ARG
=Loc 1008.
src.llvm-%a7_ARG
=Loc 1009.
src.llvm-%hidden-reg
=Loc 1010.
src.llvm-callee-save.0
=Loc 1011.
src.llvm-callee-save.1
=Loc 1012.
src.llvm-callee-save.2
=Loc 1013.
src.llvm-callee-save.3
=Loc 1014.
src.llvm-contains_float_op
=Loc 1015.
src.llvm-contains_unsupported_op
=Loc 1016.
src.llvm-indir_tgt
=Loc 1017.
src.llvm-mem
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1023.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1024.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3
=Loc 1025.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.4
=Loc 1026.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.5
=Loc 1027.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.6
=Loc 1028.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.7

=Liveness
=live locs at L0.0.0
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 999999
=live locs at L0.1.0
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 999999
=live locs at L0.1.100001
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 999999
=live locs at L0.1.100002
1018, 1020, 999999
=live locs at L0.2.0
1018, 1020, 999999
=live locs at E0.0.0
1018, 1020

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1017
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(2, 3, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 1) : ARRAY[BV:32 -> BV:8]
37 : memlabel-mem-esp : MEMLABEL
38 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
39 : memmask(35, 5) : ARRAY[BV:32 -> BV:8]
40 : memmask(35, 7) : ARRAY[BV:32 -> BV:8]
41 : memmask(35, 9) : ARRAY[BV:32 -> BV:8]
42 : memmask(35, 11) : ARRAY[BV:32 -> BV:8]
43 : memmask(35, 13) : ARRAY[BV:32 -> BV:8]
44 : memmask(35, 15) : ARRAY[BV:32 -> BV:8]
45 : memmask(35, 17) : ARRAY[BV:32 -> BV:8]
46 : memmask(35, 19) : ARRAY[BV:32 -> BV:8]
47 : memmask(35, 21) : ARRAY[BV:32 -> BV:8]
48 : memsplice(1, 36, 37, 38, 5, 39, 7, 40, 9, 41, 11, 42, 13, 43, 15, 44, 17, 45, 19, 46, 21, 47) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1018
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1018
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1020
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1020
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1021
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1021
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1022
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1022
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1023
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1023
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1024
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 13) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1024
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1025
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 15) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1025
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1026
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 17) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1026
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1027
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 19) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1027
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1028
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1001 : BV:32
28 : pred_dependency_keyword.1002 : BV:32
29 : pred_dependency_keyword.1003 : BV:32
30 : pred_dependency_keyword.1004 : BV:32
31 : pred_dependency_keyword.1005 : BV:32
32 : pred_dependency_keyword.1006 : BV:32
33 : pred_dependency_keyword.1007 : BV:32
34 : pred_dependency_keyword.1008 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 21) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1028
1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1009
1 : pred_dependency_keyword.1009 : BV:32
2 : pred_dependency_keyword.1010 : BV:32
3 : pred_dependency_keyword.1011 : BV:32
4 : pred_dependency_keyword.1012 : BV:32
5 : pred_dependency_keyword.1013 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1009
1009, 1010, 1011, 1012, 1013, 
=Dependencies expr for loc 1016
1 : retaddr_const : BV:32
=Dependencies for loc 1016


=FunctionName: call_r_0
=TFG:
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_r_0
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0

=Node: L0.1.0

=Node: L0.1.100001
=L0.1.100001.Invariant.0
=Comment
undef-behaviour-fcall-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : call.0.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : function_call(1, 2, 3, 4, 5, 6, 4) : BV:32
8 : i32 : LANGTYPE
9 : islangtype(7, 8) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.100002

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : call.0.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : function_call(1, 2, 3, 4, 5, 6, 4) : BV:32
=src.llvm-mem
1 : call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : function_call(1, 2, 3, 4, 5, 6, 4) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%hidden-reg
=Loc 1003.
src.llvm-%trgt.0
=Loc 1004.
src.llvm-callee-save.0
=Loc 1005.
src.llvm-callee-save.1
=Loc 1006.
src.llvm-callee-save.2
=Loc 1007.
src.llvm-callee-save.3
=Loc 1008.
src.llvm-contains_float_op
=Loc 1009.
src.llvm-contains_unsupported_op
=Loc 1010.
src.llvm-indir_tgt
=Loc 1011.
src.llvm-mem
=Loc 1012.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1

=Liveness
=live locs at L0.0.0
1012, 1013, 1014, 999999
=live locs at L0.1.0
1012, 1013, 1014, 999999
=live locs at L0.1.100001
1012, 1013, 1014, 999999
=live locs at L0.1.100002
1003, 1012, 1014, 999999
=live locs at L0.2.0
1003, 1012, 1014, 999999
=live locs at E0.0.0
1001, 1012, 1014

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1003
1 : call.0.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> BV:32]
2 : memlabel-mem-symbol.4095.256.1-heap : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
7 : memsplice(3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : nextpc_const.1 : BV:32
9 : 1 : REGID
10 : (() -> 0) : ARRAY[BV:32 -> BV:8]
11 : function_call(1, 2, 2, 7, 8, 9, 10) : BV:32
=Dependencies for loc 1003
1012, 1013, 1014, 
=Dependencies expr for loc 1011
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap : MEMLABEL
4 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
7 : memsplice(1, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : nextpc_const.1 : BV:32
9 : 0 : REGID
10 : (() -> 0) : ARRAY[BV:32 -> BV:8]
11 : function_call(2, 3, 3, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : memmask(11, 1) : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-esp : MEMLABEL
14 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
15 : memmask(11, 5) : ARRAY[BV:32 -> BV:8]
16 : memsplice(1, 12, 13, 14, 5, 15) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1011
1012, 1013, 1014, 
=Dependencies expr for loc 1012
1 : call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
7 : memsplice(3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : nextpc_const.1 : BV:32
9 : 0 : REGID
10 : (() -> 0) : ARRAY[BV:32 -> BV:8]
11 : function_call(1, 2, 2, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : memmask(11, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1012
1012, 1013, 1014, 
=Dependencies expr for loc 1014
1 : call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8] -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
7 : memsplice(3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : nextpc_const.1 : BV:32
9 : 0 : REGID
10 : (() -> 0) : ARRAY[BV:32 -> BV:8]
11 : function_call(1, 2, 2, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : memmask(11, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1014
1012, 1013, 1014, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1003 : BV:32
=Dependencies for loc 1001
1003, 
=Dependencies expr for loc 1002
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1004 : BV:32
3 : pred_dependency_keyword.1005 : BV:32
4 : pred_dependency_keyword.1006 : BV:32
5 : pred_dependency_keyword.1007 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1002
1002, 1004, 1005, 1006, 1007, 
=Dependencies expr for loc 1010
1 : retaddr_const : BV:32
=Dependencies for loc 1010


=FunctionName: call_r_1
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_r_1
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001
=L0.1.100001.Invariant.0
=Comment
undef-behaviour-fcall-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : call.1.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 4, 7) : BV:32
9 : i32 : LANGTYPE
10 : islangtype(8, 9) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.100002

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : call.1.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 4, 7) : BV:32
=src.llvm-mem
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 4, 7) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1014, 1015, 1016, 999999
=live locs at L0.1.0
1002, 1013, 1014, 1015, 1016, 999999
=live locs at L0.1.100001
1002, 1013, 1014, 1015, 1016, 999999
=live locs at L0.1.100002
1004, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1004
1 : call.1.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> BV:32]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memsplice(3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : nextpc_const.1 : BV:32
11 : 1 : REGID
12 : (() -> 0) : ARRAY[BV:32 -> BV:8]
13 : pred_dependency_keyword.1002 : BV:32
14 : function_call(1, 2, 2, 9, 10, 11, 12, 13) : BV:32
=Dependencies for loc 1004
1002, 1013, 1014, 1015, 1016, 
=Dependencies expr for loc 1012
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memsplice(1, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : nextpc_const.1 : BV:32
11 : 0 : REGID
12 : (() -> 0) : ARRAY[BV:32 -> BV:8]
13 : pred_dependency_keyword.1002 : BV:32
14 : function_call(2, 3, 3, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
15 : memmask(14, 1) : ARRAY[BV:32 -> BV:8]
16 : memlabel-mem-esp : MEMLABEL
17 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
18 : memmask(14, 5) : ARRAY[BV:32 -> BV:8]
19 : memmask(14, 7) : ARRAY[BV:32 -> BV:8]
20 : memsplice(1, 15, 16, 17, 5, 18, 7, 19) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1012
1002, 1013, 1014, 1015, 1016, 
=Dependencies expr for loc 1013
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memsplice(3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : nextpc_const.1 : BV:32
11 : 0 : REGID
12 : (() -> 0) : ARRAY[BV:32 -> BV:8]
13 : pred_dependency_keyword.1002 : BV:32
14 : function_call(1, 2, 2, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
15 : memmask(14, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1013
1002, 1013, 1014, 1015, 1016, 
=Dependencies expr for loc 1015
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memsplice(3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : nextpc_const.1 : BV:32
11 : 0 : REGID
12 : (() -> 0) : ARRAY[BV:32 -> BV:8]
13 : pred_dependency_keyword.1002 : BV:32
14 : function_call(1, 2, 2, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
15 : memmask(14, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1015
1002, 1013, 1014, 1015, 1016, 
=Dependencies expr for loc 1016
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
9 : memsplice(3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
10 : nextpc_const.1 : BV:32
11 : 0 : REGID
12 : (() -> 0) : ARRAY[BV:32 -> BV:8]
13 : pred_dependency_keyword.1002 : BV:32
14 : function_call(1, 2, 2, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
15 : memmask(14, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1016
1002, 1013, 1014, 1015, 1016, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: call_r_2
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_r_2
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001
=L0.1.100001.Invariant.0
=Comment
undef-behaviour-fcall-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : call.2.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8) : BV:32
10 : i32 : LANGTYPE
11 : islangtype(9, 10) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.100002

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : call.2.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8) : BV:32
=src.llvm-mem
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1015, 1016, 1017, 1018, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1015, 1016, 1017, 1018, 999999
=live locs at L0.1.100001
1002, 1003, 1014, 1015, 1016, 1017, 1018, 999999
=live locs at L0.1.100002
1005, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1005
1 : call.2.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> BV:32]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memsplice(3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 1 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1002 : BV:32
16 : pred_dependency_keyword.1003 : BV:32
17 : function_call(1, 2, 2, 11, 12, 13, 14, 15, 16) : BV:32
=Dependencies for loc 1005
1002, 1003, 1014, 1015, 1016, 1017, 1018, 
=Dependencies expr for loc 1013
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memsplice(1, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 0 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1002 : BV:32
16 : pred_dependency_keyword.1003 : BV:32
17 : function_call(2, 3, 3, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 1) : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-esp : MEMLABEL
20 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
21 : memmask(17, 5) : ARRAY[BV:32 -> BV:8]
22 : memmask(17, 7) : ARRAY[BV:32 -> BV:8]
23 : memmask(17, 9) : ARRAY[BV:32 -> BV:8]
24 : memsplice(1, 18, 19, 20, 5, 21, 7, 22, 9, 23) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1013
1002, 1003, 1014, 1015, 1016, 1017, 1018, 
=Dependencies expr for loc 1014
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memsplice(3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 0 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1002 : BV:32
16 : pred_dependency_keyword.1003 : BV:32
17 : function_call(1, 2, 2, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1014
1002, 1003, 1014, 1015, 1016, 1017, 1018, 
=Dependencies expr for loc 1016
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memsplice(3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 0 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1002 : BV:32
16 : pred_dependency_keyword.1003 : BV:32
17 : function_call(1, 2, 2, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1016
1002, 1003, 1014, 1015, 1016, 1017, 1018, 
=Dependencies expr for loc 1017
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memsplice(3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 0 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1002 : BV:32
16 : pred_dependency_keyword.1003 : BV:32
17 : function_call(1, 2, 2, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1002, 1003, 1014, 1015, 1016, 1017, 1018, 
=Dependencies expr for loc 1018
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1014 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
11 : memsplice(3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
12 : nextpc_const.1 : BV:32
13 : 0 : REGID
14 : (() -> 0) : ARRAY[BV:32 -> BV:8]
15 : pred_dependency_keyword.1002 : BV:32
16 : pred_dependency_keyword.1003 : BV:32
17 : function_call(1, 2, 2, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : memmask(17, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1018
1002, 1003, 1014, 1015, 1016, 1017, 1018, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: call_r_3
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_r_3
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001
=L0.1.100001.Invariant.0
=Comment
undef-behaviour-fcall-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : call.3.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9) : BV:32
11 : i32 : LANGTYPE
12 : islangtype(10, 11) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.100002

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : call.3.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9) : BV:32
=src.llvm-mem
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%a2_ARG
=Loc 1005.
src.llvm-%hidden-reg
=Loc 1006.
src.llvm-%trgt.0
=Loc 1007.
src.llvm-callee-save.0
=Loc 1008.
src.llvm-callee-save.1
=Loc 1009.
src.llvm-callee-save.2
=Loc 1010.
src.llvm-callee-save.3
=Loc 1011.
src.llvm-contains_float_op
=Loc 1012.
src.llvm-contains_unsupported_op
=Loc 1013.
src.llvm-indir_tgt
=Loc 1014.
src.llvm-mem
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2

=Liveness
=live locs at L0.0.0
1002, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 999999
=live locs at L0.1.0
1002, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 999999
=live locs at L0.1.100001
1002, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 999999
=live locs at L0.1.100002
1006, 1015, 1017, 999999
=live locs at L0.2.0
1006, 1015, 1017, 999999
=live locs at E0.0.0
1001, 1015, 1017

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1006
1 : call.3.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> BV:32]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 1 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1002 : BV:32
18 : pred_dependency_keyword.1003 : BV:32
19 : pred_dependency_keyword.1004 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : BV:32
=Dependencies for loc 1006
1002, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1014
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1002 : BV:32
18 : pred_dependency_keyword.1003 : BV:32
19 : pred_dependency_keyword.1004 : BV:32
20 : function_call(2, 3, 3, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 1) : ARRAY[BV:32 -> BV:8]
22 : memlabel-mem-esp : MEMLABEL
23 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
24 : memmask(20, 5) : ARRAY[BV:32 -> BV:8]
25 : memmask(20, 7) : ARRAY[BV:32 -> BV:8]
26 : memmask(20, 9) : ARRAY[BV:32 -> BV:8]
27 : memmask(20, 11) : ARRAY[BV:32 -> BV:8]
28 : memsplice(1, 21, 22, 23, 5, 24, 7, 25, 9, 26, 11, 27) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1014
1002, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1015
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1002 : BV:32
18 : pred_dependency_keyword.1003 : BV:32
19 : pred_dependency_keyword.1004 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1015
1002, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1017
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1002 : BV:32
18 : pred_dependency_keyword.1003 : BV:32
19 : pred_dependency_keyword.1004 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1002, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1018
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1002 : BV:32
18 : pred_dependency_keyword.1003 : BV:32
19 : pred_dependency_keyword.1004 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1018
1002, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1019
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1002 : BV:32
18 : pred_dependency_keyword.1003 : BV:32
19 : pred_dependency_keyword.1004 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1019
1002, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies expr for loc 1020
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
13 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
14 : nextpc_const.1 : BV:32
15 : 0 : REGID
16 : (() -> 0) : ARRAY[BV:32 -> BV:8]
17 : pred_dependency_keyword.1002 : BV:32
18 : pred_dependency_keyword.1003 : BV:32
19 : pred_dependency_keyword.1004 : BV:32
20 : function_call(1, 2, 2, 13, 14, 15, 16, 17, 18, 19) : ARRAY[BV:32 -> BV:8]
21 : memmask(20, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1020
1002, 1003, 1004, 1015, 1016, 1017, 1018, 1019, 1020, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1006 : BV:32
=Dependencies for loc 1001
1006, 
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1005 : BV:32
2 : pred_dependency_keyword.1007 : BV:32
3 : pred_dependency_keyword.1008 : BV:32
4 : pred_dependency_keyword.1009 : BV:32
5 : pred_dependency_keyword.1010 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1005
1005, 1007, 1008, 1009, 1010, 
=Dependencies expr for loc 1013
1 : retaddr_const : BV:32
=Dependencies for loc 1013


=FunctionName: call_r_4
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_r_4
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001
=L0.1.100001.Invariant.0
=Comment
undef-behaviour-fcall-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : call.4.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10) : BV:32
12 : i32 : LANGTYPE
13 : islangtype(11, 12) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.100002

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : call.4.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10) : BV:32
=src.llvm-mem
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%a2_ARG
=Loc 1005.
src.llvm-%a3_ARG
=Loc 1006.
src.llvm-%hidden-reg
=Loc 1007.
src.llvm-%trgt.0
=Loc 1008.
src.llvm-callee-save.0
=Loc 1009.
src.llvm-callee-save.1
=Loc 1010.
src.llvm-callee-save.2
=Loc 1011.
src.llvm-callee-save.3
=Loc 1012.
src.llvm-contains_float_op
=Loc 1013.
src.llvm-contains_unsupported_op
=Loc 1014.
src.llvm-indir_tgt
=Loc 1015.
src.llvm-mem
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3

=Liveness
=live locs at L0.0.0
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 999999
=live locs at L0.1.0
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 999999
=live locs at L0.1.100001
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 999999
=live locs at L0.1.100002
1007, 1016, 1018, 999999
=live locs at L0.2.0
1007, 1016, 1018, 999999
=live locs at E0.0.0
1001, 1016, 1018

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1007
1 : call.4.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 1 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1002 : BV:32
20 : pred_dependency_keyword.1003 : BV:32
21 : pred_dependency_keyword.1004 : BV:32
22 : pred_dependency_keyword.1005 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : BV:32
=Dependencies for loc 1007
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1015
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1002 : BV:32
20 : pred_dependency_keyword.1003 : BV:32
21 : pred_dependency_keyword.1004 : BV:32
22 : pred_dependency_keyword.1005 : BV:32
23 : function_call(2, 3, 3, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 1) : ARRAY[BV:32 -> BV:8]
25 : memlabel-mem-esp : MEMLABEL
26 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
27 : memmask(23, 5) : ARRAY[BV:32 -> BV:8]
28 : memmask(23, 7) : ARRAY[BV:32 -> BV:8]
29 : memmask(23, 9) : ARRAY[BV:32 -> BV:8]
30 : memmask(23, 11) : ARRAY[BV:32 -> BV:8]
31 : memmask(23, 13) : ARRAY[BV:32 -> BV:8]
32 : memsplice(1, 24, 25, 26, 5, 27, 7, 28, 9, 29, 11, 30, 13, 31) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1015
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1016
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1002 : BV:32
20 : pred_dependency_keyword.1003 : BV:32
21 : pred_dependency_keyword.1004 : BV:32
22 : pred_dependency_keyword.1005 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1016
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1018
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1002 : BV:32
20 : pred_dependency_keyword.1003 : BV:32
21 : pred_dependency_keyword.1004 : BV:32
22 : pred_dependency_keyword.1005 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1018
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1019
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1002 : BV:32
20 : pred_dependency_keyword.1003 : BV:32
21 : pred_dependency_keyword.1004 : BV:32
22 : pred_dependency_keyword.1005 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1019
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1020
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1002 : BV:32
20 : pred_dependency_keyword.1003 : BV:32
21 : pred_dependency_keyword.1004 : BV:32
22 : pred_dependency_keyword.1005 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1020
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1021
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1002 : BV:32
20 : pred_dependency_keyword.1003 : BV:32
21 : pred_dependency_keyword.1004 : BV:32
22 : pred_dependency_keyword.1005 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1021
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies expr for loc 1022
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1016 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
15 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
16 : nextpc_const.1 : BV:32
17 : 0 : REGID
18 : (() -> 0) : ARRAY[BV:32 -> BV:8]
19 : pred_dependency_keyword.1002 : BV:32
20 : pred_dependency_keyword.1003 : BV:32
21 : pred_dependency_keyword.1004 : BV:32
22 : pred_dependency_keyword.1005 : BV:32
23 : function_call(1, 2, 2, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : memmask(23, 13) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1022
1002, 1003, 1004, 1005, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1007 : BV:32
=Dependencies for loc 1001
1007, 
=Dependencies expr for loc 1006
1 : pred_dependency_keyword.1006 : BV:32
2 : pred_dependency_keyword.1008 : BV:32
3 : pred_dependency_keyword.1009 : BV:32
4 : pred_dependency_keyword.1010 : BV:32
5 : pred_dependency_keyword.1011 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1006
1006, 1008, 1009, 1010, 1011, 
=Dependencies expr for loc 1014
1 : retaddr_const : BV:32
=Dependencies for loc 1014


=FunctionName: call_r_5
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Input: llvm-method-arg.4
1 : input.src.llvm-%a4_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_r_5
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%a4_ARG
1 : input.src.llvm-%a4_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.4
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a4_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001
=L0.1.100001.Invariant.0
=Comment
undef-behaviour-fcall-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : call.5.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11) : BV:32
13 : i32 : LANGTYPE
14 : islangtype(12, 13) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.100002

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : call.5.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11) : BV:32
=src.llvm-mem
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%a2_ARG
=Loc 1005.
src.llvm-%a3_ARG
=Loc 1006.
src.llvm-%a4_ARG
=Loc 1007.
src.llvm-%hidden-reg
=Loc 1008.
src.llvm-%trgt.0
=Loc 1009.
src.llvm-callee-save.0
=Loc 1010.
src.llvm-callee-save.1
=Loc 1011.
src.llvm-callee-save.2
=Loc 1012.
src.llvm-callee-save.3
=Loc 1013.
src.llvm-contains_float_op
=Loc 1014.
src.llvm-contains_unsupported_op
=Loc 1015.
src.llvm-indir_tgt
=Loc 1016.
src.llvm-mem
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1023.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3
=Loc 1024.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.4

=Liveness
=live locs at L0.0.0
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 999999
=live locs at L0.1.0
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 999999
=live locs at L0.1.100001
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 999999
=live locs at L0.1.100002
1008, 1017, 1019, 999999
=live locs at L0.2.0
1008, 1017, 1019, 999999
=live locs at E0.0.0
1001, 1017, 1019

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1008
1 : call.5.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 1 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1002 : BV:32
22 : pred_dependency_keyword.1003 : BV:32
23 : pred_dependency_keyword.1004 : BV:32
24 : pred_dependency_keyword.1005 : BV:32
25 : pred_dependency_keyword.1006 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : BV:32
=Dependencies for loc 1008
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1016
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1002 : BV:32
22 : pred_dependency_keyword.1003 : BV:32
23 : pred_dependency_keyword.1004 : BV:32
24 : pred_dependency_keyword.1005 : BV:32
25 : pred_dependency_keyword.1006 : BV:32
26 : function_call(2, 3, 3, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 1) : ARRAY[BV:32 -> BV:8]
28 : memlabel-mem-esp : MEMLABEL
29 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
30 : memmask(26, 5) : ARRAY[BV:32 -> BV:8]
31 : memmask(26, 7) : ARRAY[BV:32 -> BV:8]
32 : memmask(26, 9) : ARRAY[BV:32 -> BV:8]
33 : memmask(26, 11) : ARRAY[BV:32 -> BV:8]
34 : memmask(26, 13) : ARRAY[BV:32 -> BV:8]
35 : memmask(26, 15) : ARRAY[BV:32 -> BV:8]
36 : memsplice(1, 27, 28, 29, 5, 30, 7, 31, 9, 32, 11, 33, 13, 34, 15, 35) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1016
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1017
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1002 : BV:32
22 : pred_dependency_keyword.1003 : BV:32
23 : pred_dependency_keyword.1004 : BV:32
24 : pred_dependency_keyword.1005 : BV:32
25 : pred_dependency_keyword.1006 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1019
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1002 : BV:32
22 : pred_dependency_keyword.1003 : BV:32
23 : pred_dependency_keyword.1004 : BV:32
24 : pred_dependency_keyword.1005 : BV:32
25 : pred_dependency_keyword.1006 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1019
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1020
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1002 : BV:32
22 : pred_dependency_keyword.1003 : BV:32
23 : pred_dependency_keyword.1004 : BV:32
24 : pred_dependency_keyword.1005 : BV:32
25 : pred_dependency_keyword.1006 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1020
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1021
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1002 : BV:32
22 : pred_dependency_keyword.1003 : BV:32
23 : pred_dependency_keyword.1004 : BV:32
24 : pred_dependency_keyword.1005 : BV:32
25 : pred_dependency_keyword.1006 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1021
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1022
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1002 : BV:32
22 : pred_dependency_keyword.1003 : BV:32
23 : pred_dependency_keyword.1004 : BV:32
24 : pred_dependency_keyword.1005 : BV:32
25 : pred_dependency_keyword.1006 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1022
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1023
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1002 : BV:32
22 : pred_dependency_keyword.1003 : BV:32
23 : pred_dependency_keyword.1004 : BV:32
24 : pred_dependency_keyword.1005 : BV:32
25 : pred_dependency_keyword.1006 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 13) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1023
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies expr for loc 1024
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
17 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16) : ARRAY[BV:32 -> BV:8]
18 : nextpc_const.1 : BV:32
19 : 0 : REGID
20 : (() -> 0) : ARRAY[BV:32 -> BV:8]
21 : pred_dependency_keyword.1002 : BV:32
22 : pred_dependency_keyword.1003 : BV:32
23 : pred_dependency_keyword.1004 : BV:32
24 : pred_dependency_keyword.1005 : BV:32
25 : pred_dependency_keyword.1006 : BV:32
26 : function_call(1, 2, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25) : ARRAY[BV:32 -> BV:8]
27 : memmask(26, 15) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1024
1002, 1003, 1004, 1005, 1006, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1008 : BV:32
=Dependencies for loc 1001
1008, 
=Dependencies expr for loc 1007
1 : pred_dependency_keyword.1007 : BV:32
2 : pred_dependency_keyword.1009 : BV:32
3 : pred_dependency_keyword.1010 : BV:32
4 : pred_dependency_keyword.1011 : BV:32
5 : pred_dependency_keyword.1012 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1007
1007, 1009, 1010, 1011, 1012, 
=Dependencies expr for loc 1015
1 : retaddr_const : BV:32
=Dependencies for loc 1015


=FunctionName: call_r_6
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Input: llvm-method-arg.4
1 : input.src.llvm-%a4_ARG : BV:32
=Input: llvm-method-arg.5
1 : input.src.llvm-%a5_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_r_6
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%a4_ARG
1 : input.src.llvm-%a4_ARG : BV:32
=src.llvm-%a5_ARG
1 : input.src.llvm-%a5_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.4
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a4_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.5
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a5_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001
=L0.1.100001.Invariant.0
=Comment
undef-behaviour-fcall-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : call.6.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12) : BV:32
14 : i32 : LANGTYPE
15 : islangtype(13, 14) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.100002

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : call.6.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12) : BV:32
=src.llvm-mem
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%a2_ARG
=Loc 1005.
src.llvm-%a3_ARG
=Loc 1006.
src.llvm-%a4_ARG
=Loc 1007.
src.llvm-%a5_ARG
=Loc 1008.
src.llvm-%hidden-reg
=Loc 1009.
src.llvm-%trgt.0
=Loc 1010.
src.llvm-callee-save.0
=Loc 1011.
src.llvm-callee-save.1
=Loc 1012.
src.llvm-callee-save.2
=Loc 1013.
src.llvm-callee-save.3
=Loc 1014.
src.llvm-contains_float_op
=Loc 1015.
src.llvm-contains_unsupported_op
=Loc 1016.
src.llvm-indir_tgt
=Loc 1017.
src.llvm-mem
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1023.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1024.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3
=Loc 1025.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.4
=Loc 1026.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.5

=Liveness
=live locs at L0.0.0
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 999999
=live locs at L0.1.0
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 999999
=live locs at L0.1.100001
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 999999
=live locs at L0.1.100002
1009, 1018, 1020, 999999
=live locs at L0.2.0
1009, 1018, 1020, 999999
=live locs at E0.0.0
1001, 1018, 1020

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1009
1 : call.6.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 1 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1002 : BV:32
24 : pred_dependency_keyword.1003 : BV:32
25 : pred_dependency_keyword.1004 : BV:32
26 : pred_dependency_keyword.1005 : BV:32
27 : pred_dependency_keyword.1006 : BV:32
28 : pred_dependency_keyword.1007 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : BV:32
=Dependencies for loc 1009
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1017
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1002 : BV:32
24 : pred_dependency_keyword.1003 : BV:32
25 : pred_dependency_keyword.1004 : BV:32
26 : pred_dependency_keyword.1005 : BV:32
27 : pred_dependency_keyword.1006 : BV:32
28 : pred_dependency_keyword.1007 : BV:32
29 : function_call(2, 3, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 1) : ARRAY[BV:32 -> BV:8]
31 : memlabel-mem-esp : MEMLABEL
32 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
33 : memmask(29, 5) : ARRAY[BV:32 -> BV:8]
34 : memmask(29, 7) : ARRAY[BV:32 -> BV:8]
35 : memmask(29, 9) : ARRAY[BV:32 -> BV:8]
36 : memmask(29, 11) : ARRAY[BV:32 -> BV:8]
37 : memmask(29, 13) : ARRAY[BV:32 -> BV:8]
38 : memmask(29, 15) : ARRAY[BV:32 -> BV:8]
39 : memmask(29, 17) : ARRAY[BV:32 -> BV:8]
40 : memsplice(1, 30, 31, 32, 5, 33, 7, 34, 9, 35, 11, 36, 13, 37, 15, 38, 17, 39) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1018
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1002 : BV:32
24 : pred_dependency_keyword.1003 : BV:32
25 : pred_dependency_keyword.1004 : BV:32
26 : pred_dependency_keyword.1005 : BV:32
27 : pred_dependency_keyword.1006 : BV:32
28 : pred_dependency_keyword.1007 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1018
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1020
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1002 : BV:32
24 : pred_dependency_keyword.1003 : BV:32
25 : pred_dependency_keyword.1004 : BV:32
26 : pred_dependency_keyword.1005 : BV:32
27 : pred_dependency_keyword.1006 : BV:32
28 : pred_dependency_keyword.1007 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1020
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1021
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1002 : BV:32
24 : pred_dependency_keyword.1003 : BV:32
25 : pred_dependency_keyword.1004 : BV:32
26 : pred_dependency_keyword.1005 : BV:32
27 : pred_dependency_keyword.1006 : BV:32
28 : pred_dependency_keyword.1007 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1021
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1022
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1002 : BV:32
24 : pred_dependency_keyword.1003 : BV:32
25 : pred_dependency_keyword.1004 : BV:32
26 : pred_dependency_keyword.1005 : BV:32
27 : pred_dependency_keyword.1006 : BV:32
28 : pred_dependency_keyword.1007 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1022
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1023
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1002 : BV:32
24 : pred_dependency_keyword.1003 : BV:32
25 : pred_dependency_keyword.1004 : BV:32
26 : pred_dependency_keyword.1005 : BV:32
27 : pred_dependency_keyword.1006 : BV:32
28 : pred_dependency_keyword.1007 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1023
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1024
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1002 : BV:32
24 : pred_dependency_keyword.1003 : BV:32
25 : pred_dependency_keyword.1004 : BV:32
26 : pred_dependency_keyword.1005 : BV:32
27 : pred_dependency_keyword.1006 : BV:32
28 : pred_dependency_keyword.1007 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 13) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1024
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1025
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1002 : BV:32
24 : pred_dependency_keyword.1003 : BV:32
25 : pred_dependency_keyword.1004 : BV:32
26 : pred_dependency_keyword.1005 : BV:32
27 : pred_dependency_keyword.1006 : BV:32
28 : pred_dependency_keyword.1007 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 15) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1025
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies expr for loc 1026
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1018 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
19 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) : ARRAY[BV:32 -> BV:8]
20 : nextpc_const.1 : BV:32
21 : 0 : REGID
22 : (() -> 0) : ARRAY[BV:32 -> BV:8]
23 : pred_dependency_keyword.1002 : BV:32
24 : pred_dependency_keyword.1003 : BV:32
25 : pred_dependency_keyword.1004 : BV:32
26 : pred_dependency_keyword.1005 : BV:32
27 : pred_dependency_keyword.1006 : BV:32
28 : pred_dependency_keyword.1007 : BV:32
29 : function_call(1, 2, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28) : ARRAY[BV:32 -> BV:8]
30 : memmask(29, 17) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1026
1002, 1003, 1004, 1005, 1006, 1007, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1009 : BV:32
=Dependencies for loc 1001
1009, 
=Dependencies expr for loc 1008
1 : pred_dependency_keyword.1008 : BV:32
2 : pred_dependency_keyword.1010 : BV:32
3 : pred_dependency_keyword.1011 : BV:32
4 : pred_dependency_keyword.1012 : BV:32
5 : pred_dependency_keyword.1013 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1008
1008, 1010, 1011, 1012, 1013, 
=Dependencies expr for loc 1016
1 : retaddr_const : BV:32
=Dependencies for loc 1016


=FunctionName: call_r_7
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Input: llvm-method-arg.4
1 : input.src.llvm-%a4_ARG : BV:32
=Input: llvm-method-arg.5
1 : input.src.llvm-%a5_ARG : BV:32
=Input: llvm-method-arg.6
1 : input.src.llvm-%a6_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_r_7
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%a4_ARG
1 : input.src.llvm-%a4_ARG : BV:32
=src.llvm-%a5_ARG
1 : input.src.llvm-%a5_ARG : BV:32
=src.llvm-%a6_ARG
1 : input.src.llvm-%a6_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.4
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a4_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.5
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a5_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.6
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a6_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001
=L0.1.100001.Invariant.0
=Comment
undef-behaviour-fcall-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : call.7.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : input.src.llvm-%a6_ARG : BV:32
14 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13) : BV:32
15 : i32 : LANGTYPE
16 : islangtype(14, 15) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.100002

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : call.7.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : input.src.llvm-%a6_ARG : BV:32
14 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13) : BV:32
=src.llvm-mem
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : input.src.llvm-%a6_ARG : BV:32
14 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%a2_ARG
=Loc 1005.
src.llvm-%a3_ARG
=Loc 1006.
src.llvm-%a4_ARG
=Loc 1007.
src.llvm-%a5_ARG
=Loc 1008.
src.llvm-%a6_ARG
=Loc 1009.
src.llvm-%hidden-reg
=Loc 1010.
src.llvm-%trgt.0
=Loc 1011.
src.llvm-callee-save.0
=Loc 1012.
src.llvm-callee-save.1
=Loc 1013.
src.llvm-callee-save.2
=Loc 1014.
src.llvm-callee-save.3
=Loc 1015.
src.llvm-contains_float_op
=Loc 1016.
src.llvm-contains_unsupported_op
=Loc 1017.
src.llvm-indir_tgt
=Loc 1018.
src.llvm-mem
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1023.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1024.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1025.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3
=Loc 1026.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.4
=Loc 1027.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.5
=Loc 1028.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.6

=Liveness
=live locs at L0.0.0
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 999999
=live locs at L0.1.0
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 999999
=live locs at L0.1.100001
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 999999
=live locs at L0.1.100002
1010, 1019, 1021, 999999
=live locs at L0.2.0
1010, 1019, 1021, 999999
=live locs at E0.0.0
1001, 1019, 1021

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1010
1 : call.7.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 1 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : BV:32
=Dependencies for loc 1010
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1018
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(2, 3, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 1) : ARRAY[BV:32 -> BV:8]
34 : memlabel-mem-esp : MEMLABEL
35 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
36 : memmask(32, 5) : ARRAY[BV:32 -> BV:8]
37 : memmask(32, 7) : ARRAY[BV:32 -> BV:8]
38 : memmask(32, 9) : ARRAY[BV:32 -> BV:8]
39 : memmask(32, 11) : ARRAY[BV:32 -> BV:8]
40 : memmask(32, 13) : ARRAY[BV:32 -> BV:8]
41 : memmask(32, 15) : ARRAY[BV:32 -> BV:8]
42 : memmask(32, 17) : ARRAY[BV:32 -> BV:8]
43 : memmask(32, 19) : ARRAY[BV:32 -> BV:8]
44 : memsplice(1, 33, 34, 35, 5, 36, 7, 37, 9, 38, 11, 39, 13, 40, 15, 41, 17, 42, 19, 43) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1018
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1019
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1019
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1021
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1021
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1022
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1022
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1023
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1023
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1024
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1024
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1025
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 13) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1025
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1026
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 15) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1026
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1027
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 17) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1027
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies expr for loc 1028
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1019 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
21 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20) : ARRAY[BV:32 -> BV:8]
22 : nextpc_const.1 : BV:32
23 : 0 : REGID
24 : (() -> 0) : ARRAY[BV:32 -> BV:8]
25 : pred_dependency_keyword.1002 : BV:32
26 : pred_dependency_keyword.1003 : BV:32
27 : pred_dependency_keyword.1004 : BV:32
28 : pred_dependency_keyword.1005 : BV:32
29 : pred_dependency_keyword.1006 : BV:32
30 : pred_dependency_keyword.1007 : BV:32
31 : pred_dependency_keyword.1008 : BV:32
32 : function_call(1, 2, 2, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31) : ARRAY[BV:32 -> BV:8]
33 : memmask(32, 19) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1028
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1010 : BV:32
=Dependencies for loc 1001
1010, 
=Dependencies expr for loc 1009
1 : pred_dependency_keyword.1009 : BV:32
2 : pred_dependency_keyword.1011 : BV:32
3 : pred_dependency_keyword.1012 : BV:32
4 : pred_dependency_keyword.1013 : BV:32
5 : pred_dependency_keyword.1014 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1009
1009, 1011, 1012, 1013, 1014, 
=Dependencies expr for loc 1017
1 : retaddr_const : BV:32
=Dependencies for loc 1017


=FunctionName: call_r_8
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Input: llvm-method-arg.4
1 : input.src.llvm-%a4_ARG : BV:32
=Input: llvm-method-arg.5
1 : input.src.llvm-%a5_ARG : BV:32
=Input: llvm-method-arg.6
1 : input.src.llvm-%a6_ARG : BV:32
=Input: llvm-method-arg.7
1 : input.src.llvm-%a7_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : callee_r_8
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%a4_ARG
1 : input.src.llvm-%a4_ARG : BV:32
=src.llvm-%a5_ARG
1 : input.src.llvm-%a5_ARG : BV:32
=src.llvm-%a6_ARG
1 : input.src.llvm-%a6_ARG : BV:32
=src.llvm-%a7_ARG
1 : input.src.llvm-%a7_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.4
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a7_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.5
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a4_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.6
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a5_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.7
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a6_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.100001
=L0.1.100001.Invariant.0
=Comment
undef-behaviour-fcall-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : call.8.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : input.src.llvm-%a6_ARG : BV:32
14 : input.src.llvm-%a7_ARG : BV:32
15 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14) : BV:32
16 : i32 : LANGTYPE
17 : islangtype(15, 16) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.100002

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : call.8.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : input.src.llvm-%a6_ARG : BV:32
14 : input.src.llvm-%a7_ARG : BV:32
15 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14) : BV:32
=src.llvm-mem
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.llvm-%a0_ARG : BV:32
8 : input.src.llvm-%a1_ARG : BV:32
9 : input.src.llvm-%a2_ARG : BV:32
10 : input.src.llvm-%a3_ARG : BV:32
11 : input.src.llvm-%a4_ARG : BV:32
12 : input.src.llvm-%a5_ARG : BV:32
13 : input.src.llvm-%a6_ARG : BV:32
14 : input.src.llvm-%a7_ARG : BV:32
15 : function_call(1, 2, 3, 4, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%a2_ARG
=Loc 1005.
src.llvm-%a3_ARG
=Loc 1006.
src.llvm-%a4_ARG
=Loc 1007.
src.llvm-%a5_ARG
=Loc 1008.
src.llvm-%a6_ARG
=Loc 1009.
src.llvm-%a7_ARG
=Loc 1010.
src.llvm-%hidden-reg
=Loc 1011.
src.llvm-%trgt.0
=Loc 1012.
src.llvm-callee-save.0
=Loc 1013.
src.llvm-callee-save.1
=Loc 1014.
src.llvm-callee-save.2
=Loc 1015.
src.llvm-callee-save.3
=Loc 1016.
src.llvm-contains_float_op
=Loc 1017.
src.llvm-contains_unsupported_op
=Loc 1018.
src.llvm-indir_tgt
=Loc 1019.
src.llvm-mem
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1023.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1024.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1025.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1026.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3
=Loc 1027.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.4
=Loc 1028.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.5
=Loc 1029.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.6
=Loc 1030.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.7

=Liveness
=live locs at L0.0.0
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 999999
=live locs at L0.1.0
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 999999
=live locs at L0.1.100001
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 999999
=live locs at L0.1.100002
1011, 1020, 1022, 999999
=live locs at L0.2.0
1011, 1020, 1022, 999999
=live locs at E0.0.0
1001, 1020, 1022

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1011
1 : call.8.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 1 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : BV:32
=Dependencies for loc 1011
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1019
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(2, 3, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 1) : ARRAY[BV:32 -> BV:8]
37 : memlabel-mem-esp : MEMLABEL
38 : pred_dependency_keyword.1021 : ARRAY[BV:32 -> BV:8]
39 : memmask(35, 5) : ARRAY[BV:32 -> BV:8]
40 : memmask(35, 7) : ARRAY[BV:32 -> BV:8]
41 : memmask(35, 9) : ARRAY[BV:32 -> BV:8]
42 : memmask(35, 11) : ARRAY[BV:32 -> BV:8]
43 : memmask(35, 13) : ARRAY[BV:32 -> BV:8]
44 : memmask(35, 15) : ARRAY[BV:32 -> BV:8]
45 : memmask(35, 17) : ARRAY[BV:32 -> BV:8]
46 : memmask(35, 19) : ARRAY[BV:32 -> BV:8]
47 : memmask(35, 21) : ARRAY[BV:32 -> BV:8]
48 : memsplice(1, 36, 37, 38, 5, 39, 7, 40, 9, 41, 11, 42, 13, 43, 15, 44, 17, 45, 19, 46, 21, 47) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1019
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1020
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1020
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1022
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1022
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1023
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 7) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1023
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1024
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 9) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1024
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1025
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 11) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1025
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1026
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 13) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1026
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1027
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 15) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1027
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1028
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 17) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1028
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1029
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 19) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1029
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies expr for loc 1030
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.0-arg.1-arg.2-arg.3-arg.4-arg.5-arg.6-arg.7 : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1022 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1020 : ARRAY[BV:32 -> BV:8]
7 : memlabel-mem-arg.0 : MEMLABEL
8 : pred_dependency_keyword.1023 : ARRAY[BV:32 -> BV:8]
9 : memlabel-mem-arg.1 : MEMLABEL
10 : pred_dependency_keyword.1024 : ARRAY[BV:32 -> BV:8]
11 : memlabel-mem-arg.2 : MEMLABEL
12 : pred_dependency_keyword.1025 : ARRAY[BV:32 -> BV:8]
13 : memlabel-mem-arg.3 : MEMLABEL
14 : pred_dependency_keyword.1026 : ARRAY[BV:32 -> BV:8]
15 : memlabel-mem-arg.4 : MEMLABEL
16 : pred_dependency_keyword.1027 : ARRAY[BV:32 -> BV:8]
17 : memlabel-mem-arg.5 : MEMLABEL
18 : pred_dependency_keyword.1028 : ARRAY[BV:32 -> BV:8]
19 : memlabel-mem-arg.6 : MEMLABEL
20 : pred_dependency_keyword.1029 : ARRAY[BV:32 -> BV:8]
21 : memlabel-mem-arg.7 : MEMLABEL
22 : pred_dependency_keyword.1030 : ARRAY[BV:32 -> BV:8]
23 : memsplice(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22) : ARRAY[BV:32 -> BV:8]
24 : nextpc_const.1 : BV:32
25 : 0 : REGID
26 : (() -> 0) : ARRAY[BV:32 -> BV:8]
27 : pred_dependency_keyword.1002 : BV:32
28 : pred_dependency_keyword.1003 : BV:32
29 : pred_dependency_keyword.1004 : BV:32
30 : pred_dependency_keyword.1005 : BV:32
31 : pred_dependency_keyword.1006 : BV:32
32 : pred_dependency_keyword.1007 : BV:32
33 : pred_dependency_keyword.1008 : BV:32
34 : pred_dependency_keyword.1009 : BV:32
35 : function_call(1, 2, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34) : ARRAY[BV:32 -> BV:8]
36 : memmask(35, 21) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1030
1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 
=Dependencies for edge: L0.1.100002 => L0.2.0
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1011 : BV:32
=Dependencies for loc 1001
1011, 
=Dependencies expr for loc 1010
1 : pred_dependency_keyword.1010 : BV:32
2 : pred_dependency_keyword.1012 : BV:32
3 : pred_dependency_keyword.1013 : BV:32
4 : pred_dependency_keyword.1014 : BV:32
5 : pred_dependency_keyword.1015 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1010
1010, 1012, 1013, 1014, 1015, 
=Dependencies expr for loc 1018
1 : retaddr_const : BV:32
=Dependencies for loc 1018


=FunctionName: cbranch
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BOOL
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Input: llvm-method-arg.3
1 : input.src.llvm-%a3_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%2
1 : input.src.llvm-%2 : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BOOL
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%a3_ARG
1 : input.src.llvm-%a3_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a3_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L1.1.0

=Node: L1.2.0

=Node: L3.1.0
=L3.1.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L3.1.0
=EdgeCond: 
1 : input.src.llvm-%a0_ARG : BOOL
2 : not(1) : BOOL
=StateTo: 
=Edge: L0.1.0 => L1.1.0
=EdgeCond: 
1 : input.src.llvm-%a0_ARG : BOOL
=StateTo: 
=Edge: L1.1.0 => L1.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%2
1 : 0 : BV:32
2 : 1 : BV:32
3 : bvadd(1, 2) : BV:32
=Edge: L1.2.0 => L1.1.0
=EdgeCond: 
1 : input.src.llvm-%a0_ARG : BOOL
=StateTo: 
=Edge: L1.2.0 => L3.1.0
=EdgeCond: 
1 : input.src.llvm-%a0_ARG : BOOL
2 : not(1) : BOOL
=StateTo: 
=Edge: L3.1.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : 0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%2
=Loc 1003.
src.llvm-%a0_ARG
=Loc 1004.
src.llvm-%a1_ARG
=Loc 1005.
src.llvm-%a2_ARG
=Loc 1006.
src.llvm-%a3_ARG
=Loc 1007.
src.llvm-%hidden-reg
=Loc 1008.
src.llvm-callee-save.0
=Loc 1009.
src.llvm-callee-save.1
=Loc 1010.
src.llvm-callee-save.2
=Loc 1011.
src.llvm-callee-save.3
=Loc 1012.
src.llvm-contains_float_op
=Loc 1013.
src.llvm-contains_unsupported_op
=Loc 1014.
src.llvm-indir_tgt
=Loc 1015.
src.llvm-mem
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.3

=Liveness
=live locs at L0.0.0
1003, 1016, 1018, 999999
=live locs at L0.1.0
1003, 1016, 1018, 999999
=live locs at L1.1.0
1003, 1016, 1018, 999999
=live locs at L1.2.0
1003, 1016, 1018, 999999
=live locs at L3.1.0
1016, 1018, 999999
=live locs at E0.0.0
1016, 1018

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L3.1.0
=Dependencies for edge: L0.1.0 => L1.1.0
=Dependencies for edge: L1.1.0 => L1.2.0
=Dependencies expr for loc 1002
1 : 1 : BV:32
=Dependencies for loc 1002

=Dependencies for edge: L1.2.0 => L1.1.0
=Dependencies expr for loc 1002
1 : 1 : BV:32
=Dependencies for loc 1002

=Dependencies for edge: L1.2.0 => L3.1.0
=Dependencies expr for loc 1002
1 : 1 : BV:32
=Dependencies for loc 1002

=Dependencies for edge: L3.1.0 => E0.0.0
=Dependencies expr for loc 1001
1 : 0 : BV:32
=Dependencies for loc 1001

=Dependencies expr for loc 1007
1 : pred_dependency_keyword.1007 : BV:32
2 : pred_dependency_keyword.1008 : BV:32
3 : pred_dependency_keyword.1009 : BV:32
4 : pred_dependency_keyword.1010 : BV:32
5 : pred_dependency_keyword.1011 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1007
1007, 1008, 1009, 1010, 1011, 
=Dependencies expr for loc 1014
1 : retaddr_const : BV:32
=Dependencies for loc 1014


=FunctionName: exit0
=TFG:
=Node: E1.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
C_NEXTPC1 : exit
=Locals-map:
=StartState:
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0

=Node: L0.1.0

=Node: L0.1.100001

=Node: L0.1.100002

=Node: E1.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap
=memlabel_map.1
mlvar.llvm.1 : memlabel-mem-symbol.4095.256.1-heap
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.100001
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.100001 => L0.1.100002
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlvar.llvm.0 : MEMLABEL
3 : mlvar.llvm.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : 0 : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 4, 7) : ARRAY[BV:32 -> BV:8]
=Edge: L0.1.100002 => E1.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 

=Locs
=Loc 1001.
src.llvm-%hidden-reg
=Loc 1002.
src.llvm-callee-save.0
=Loc 1003.
src.llvm-callee-save.1
=Loc 1004.
src.llvm-callee-save.2
=Loc 1005.
src.llvm-callee-save.3
=Loc 1006.
src.llvm-contains_float_op
=Loc 1007.
src.llvm-contains_unsupported_op
=Loc 1008.
src.llvm-indir_tgt
=Loc 1009.
src.llvm-mem
=Loc 1010.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1011.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1012.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1

=Liveness
=live locs at L0.0.0
1010, 1011, 1012, 999999
=live locs at L0.1.0
1010, 1011, 1012, 999999
=live locs at L0.1.100001
1010, 1011, 1012, 999999
=live locs at L0.1.100002
1010, 1012, 999999
=live locs at E1.0.0
1010, 1012

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.100001
=Dependencies for edge: L0.1.100001 => L0.1.100002
=Dependencies expr for loc 1009
1 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
2 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
3 : memlabel-mem-symbol.4095.256.1-heap : MEMLABEL
4 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1010 : ARRAY[BV:32 -> BV:8]
7 : memsplice(1, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : nextpc_const.1 : BV:32
9 : 0 : REGID
10 : (() -> 0) : ARRAY[BV:32 -> BV:8]
11 : 0 : BV:32
12 : function_call(2, 3, 3, 7, 8, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : memmask(12, 1) : ARRAY[BV:32 -> BV:8]
14 : memlabel-mem-esp : MEMLABEL
15 : pred_dependency_keyword.1011 : ARRAY[BV:32 -> BV:8]
16 : memmask(12, 5) : ARRAY[BV:32 -> BV:8]
17 : memsplice(1, 13, 14, 15, 5, 16) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1009
1010, 1011, 1012, 
=Dependencies expr for loc 1010
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1010 : ARRAY[BV:32 -> BV:8]
7 : memsplice(3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : nextpc_const.1 : BV:32
9 : 0 : REGID
10 : (() -> 0) : ARRAY[BV:32 -> BV:8]
11 : 0 : BV:32
12 : function_call(1, 2, 2, 7, 8, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : memmask(12, 5) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1010
1010, 1011, 1012, 
=Dependencies expr for loc 1012
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,ARRAY[BV:32 -> BV:8],BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : memlabel-mem-symbol.4095.256.1-heap : MEMLABEL
3 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
4 : pred_dependency_keyword.1012 : ARRAY[BV:32 -> BV:8]
5 : memlabel-mem-heap : MEMLABEL
6 : pred_dependency_keyword.1010 : ARRAY[BV:32 -> BV:8]
7 : memsplice(3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
8 : nextpc_const.1 : BV:32
9 : 0 : REGID
10 : (() -> 0) : ARRAY[BV:32 -> BV:8]
11 : 0 : BV:32
12 : function_call(1, 2, 2, 7, 8, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
13 : memmask(12, 3) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1012
1010, 1011, 1012, 
=Dependencies for edge: L0.1.100002 => E1.0.0

=FunctionName: gep
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.1.total_offset
1 : input.src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.1.total_offset : BV:32
=src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.2.total_offset
1 : input.src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.2.total_offset : BV:32
=src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.3.total_offset
1 : input.src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.3.total_offset : BV:32
=src.llvm-%gep.0.L0.1.0.L0.2.0.intermediate.gepoffset.1.offset
1 : input.src.llvm-%gep.0.L0.1.0.L0.2.0.intermediate.gepoffset.1.offset : BV:32
=src.llvm-%gep.0.L0.1.0.L0.2.0.intermediate.gepoffset.2.offset
1 : input.src.llvm-%gep.0.L0.1.0.L0.2.0.intermediate.gepoffset.2.offset : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : -1234x-2345xi8--* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-align-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : 2893730 : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.3
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.1.1

=Node: L0.1.2

=Node: L0.1.3

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : -2345xi8-* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.1.1
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.1.total_offset
1 : 0 : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : 2893730 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%gep.0.L0.1.0.L0.2.0.intermediate.gepoffset.1.offset
1 : input.src.llvm-%a1_ARG : BV:32
2 : 2893730 : BV:32
3 : bvmul(1, 2) : BV:32
=Edge: L0.1.1 => L0.1.2
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.2.total_offset
1 : input.src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.1.total_offset : BV:32
2 : input.src.llvm-%a2_ARG : BV:32
3 : 2345 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=src.llvm-%gep.0.L0.1.0.L0.2.0.intermediate.gepoffset.2.offset
1 : input.src.llvm-%a2_ARG : BV:32
2 : 2345 : BV:32
3 : bvmul(1, 2) : BV:32
=Edge: L0.1.2 => L0.1.3
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.3.total_offset
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.2.total_offset : BV:32
3 : bvadd(1, 2) : BV:32
=Edge: L0.1.3 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.3.total_offset : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%a2_ARG
=Loc 1005.
src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.1.total_offset
=Loc 1006.
src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.2.total_offset
=Loc 1007.
src.llvm-%gep.0.L0.1.0.L0.2.0.gepoffset.3.total_offset
=Loc 1008.
src.llvm-%gep.0.L0.1.0.L0.2.0.intermediate.gepoffset.1.offset
=Loc 1009.
src.llvm-%gep.0.L0.1.0.L0.2.0.intermediate.gepoffset.2.offset
=Loc 1010.
src.llvm-%hidden-reg
=Loc 1011.
src.llvm-%trgt.0
=Loc 1012.
src.llvm-callee-save.0
=Loc 1013.
src.llvm-callee-save.1
=Loc 1014.
src.llvm-callee-save.2
=Loc 1015.
src.llvm-callee-save.3
=Loc 1016.
src.llvm-contains_float_op
=Loc 1017.
src.llvm-contains_unsupported_op
=Loc 1018.
src.llvm-indir_tgt
=Loc 1019.
src.llvm-mem
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1021.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1022.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1023.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1024.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1025.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2

=Liveness
=live locs at L0.0.0
1002, 1003, 1004, 1020, 1022, 999999
=live locs at L0.1.0
1002, 1003, 1004, 1020, 1022, 999999
=live locs at L0.1.1
1002, 1004, 1005, 1020, 1022, 999999
=live locs at L0.1.2
1002, 1006, 1020, 1022, 999999
=live locs at L0.1.3
1007, 1020, 1022, 999999
=live locs at L0.2.0
1011, 1020, 1022, 999999
=live locs at E0.0.0
1001, 1020, 1022

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.1.1
=Dependencies expr for loc 1005
1 : 2893730 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvmul(1, 2) : BV:32
=Dependencies for loc 1005
1003, 
=Dependencies expr for loc 1008
1 : 2893730 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvmul(1, 2) : BV:32
=Dependencies for loc 1008
1003, 
=Dependencies for edge: L0.1.1 => L0.1.2
=Dependencies expr for loc 1006
1 : pred_dependency_keyword.1005 : BV:32
2 : 2345 : BV:32
3 : pred_dependency_keyword.1004 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=Dependencies for loc 1006
1004, 1005, 
=Dependencies expr for loc 1009
1 : 2345 : BV:32
2 : pred_dependency_keyword.1004 : BV:32
3 : bvmul(1, 2) : BV:32
=Dependencies for loc 1009
1004, 
=Dependencies for edge: L0.1.2 => L0.1.3
=Dependencies expr for loc 1007
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : bvadd(1, 2) : BV:32
=Dependencies for loc 1007
1002, 1006, 
=Dependencies for edge: L0.1.3 => L0.2.0
=Dependencies expr for loc 1011
1 : pred_dependency_keyword.1007 : BV:32
=Dependencies for loc 1011
1007, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1011 : BV:32
=Dependencies for loc 1001
1011, 
=Dependencies expr for loc 1010
1 : pred_dependency_keyword.1010 : BV:32
2 : pred_dependency_keyword.1012 : BV:32
3 : pred_dependency_keyword.1013 : BV:32
4 : pred_dependency_keyword.1014 : BV:32
5 : pred_dependency_keyword.1015 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1010
1010, 1012, 1013, 1014, 1015, 
=Dependencies expr for loc 1018
1 : retaddr_const : BV:32
=Dependencies for loc 1018


=FunctionName: icmp_eq
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : eq(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : eq(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_eq8
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:8
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:8
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:8
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:8
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:8
2 : i8 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:8
2 : i8 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:8
2 : input.src.llvm-%a1_ARG : BV:8
3 : eq(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:8
2 : pred_dependency_keyword.1003 : BV:8
3 : eq(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_eq_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : 1234 : BV:32
3 : eq(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BV:32
2 : 1234 : BV:32
3 : eq(1, 2) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: icmp_ne
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_ne8
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:8
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:8
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:8
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:8
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:8
2 : i8 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:8
2 : i8 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:8
2 : input.src.llvm-%a1_ARG : BV:8
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:8
2 : pred_dependency_keyword.1003 : BV:8
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_ne_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : 1234 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BV:32
2 : 1234 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: icmp_sge
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvsge(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvsge(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_sge_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : 1234 : BV:32
2 : input.src.llvm-%a0_ARG : BV:32
3 : bvsge(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 1234 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : bvsge(1, 2) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: icmp_sgt
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvsgt(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvsgt(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_sgt_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : 1234 : BV:32
2 : input.src.llvm-%a0_ARG : BV:32
3 : bvsgt(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 1234 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : bvsgt(1, 2) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: icmp_sle
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvsle(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvsle(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_sle_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : 1234 : BV:32
2 : input.src.llvm-%a0_ARG : BV:32
3 : bvsle(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 1234 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : bvsle(1, 2) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: icmp_slt
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvslt(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvslt(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_slt_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : 1234 : BV:32
2 : input.src.llvm-%a0_ARG : BV:32
3 : bvslt(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 1234 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : bvslt(1, 2) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: icmp_uge
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvuge(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvuge(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_uge_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : 1234 : BV:32
2 : input.src.llvm-%a0_ARG : BV:32
3 : bvuge(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 1234 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : bvuge(1, 2) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: icmp_ugt
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvugt(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvugt(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_ugt_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : 1234 : BV:32
3 : bvugt(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BV:32
2 : 1234 : BV:32
3 : bvugt(1, 2) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: icmp_ule
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvule(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvule(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_ule_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : 1234 : BV:32
2 : input.src.llvm-%a0_ARG : BV:32
3 : bvule(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 1234 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : bvule(1, 2) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: icmp_ult
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvult(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvult(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: icmp_ult_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : 1234 : BV:32
2 : input.src.llvm-%a0_ARG : BV:32
3 : bvult(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 1234 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : bvult(1, 2) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: load1
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:8
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:8
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:8
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i8* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-align-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : 1 : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-load-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i8* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
undef-behaviour-load-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.0 : MEMLABEL
3 : input.src.llvm-%a0_ARG : BV:32
4 : 1 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:8
7 : i8 : LANGTYPE
8 : islangtype(6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:8
2 : i8 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.0 : MEMLABEL
3 : input.src.llvm-%a0_ARG : BV:32
4 : 1 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:8
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:8
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
SLOT
=memname
src.llvm-mem
=addr
1 : input.src.llvm-%a0_ARG : BV:32
=nbytes
1
=bigendian
false
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1013, 1014, 1016, 999999
=live locs at L0.1.0
1013, 1014, 1016, 999999
=live locs at L0.2.0
1004, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1013 : BV:8
=Dependencies for loc 1004
1013, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:8
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: load2
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:16
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:16
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:16
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i16* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-align-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : 2 : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-load-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i16* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
undef-behaviour-load-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.0 : MEMLABEL
3 : input.src.llvm-%a0_ARG : BV:32
4 : 2 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:16
7 : i16 : LANGTYPE
8 : islangtype(6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:16
2 : i16 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.0 : MEMLABEL
3 : input.src.llvm-%a0_ARG : BV:32
4 : 2 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:16
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:16
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
SLOT
=memname
src.llvm-mem
=addr
1 : input.src.llvm-%a0_ARG : BV:32
=nbytes
2
=bigendian
false
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1013, 1014, 1016, 999999
=live locs at L0.1.0
1013, 1014, 1016, 999999
=live locs at L0.2.0
1004, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1013 : BV:16
=Dependencies for loc 1004
1013, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:16
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: load4
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-align-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-load-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
undef-behaviour-load-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.0 : MEMLABEL
3 : input.src.llvm-%a0_ARG : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
7 : i32 : LANGTYPE
8 : islangtype(6, 7) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.0
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.0 : MEMLABEL
3 : input.src.llvm-%a0_ARG : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
SLOT
=memname
src.llvm-mem
=addr
1 : input.src.llvm-%a0_ARG : BV:32
=nbytes
4
=bigendian
false
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1013, 1014, 1016, 999999
=live locs at L0.1.0
1013, 1014, 1016, 999999
=live locs at L0.2.0
1004, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1013 : BV:32
=Dependencies for loc 1004
1013, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: lshr
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvlshr(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvlshr(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: main
=TFG:
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0

=Node: L0.1.0

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%hidden-reg
=Loc 1002.
src.llvm-callee-save.0
=Loc 1003.
src.llvm-callee-save.1
=Loc 1004.
src.llvm-callee-save.2
=Loc 1005.
src.llvm-callee-save.3
=Loc 1006.
src.llvm-contains_float_op
=Loc 1007.
src.llvm-contains_unsupported_op
=Loc 1008.
src.llvm-indir_tgt
=Loc 1009.
src.llvm-mem
=Loc 1010.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1011.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1012.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1

=Liveness
=live locs at L0.0.0
1010, 1012, 999999
=live locs at L0.1.0
1010, 1012, 999999
=live locs at E0.0.0
1010, 1012

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1001 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : pred_dependency_keyword.1003 : BV:32
4 : pred_dependency_keyword.1004 : BV:32
5 : pred_dependency_keyword.1005 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1001
1001, 1002, 1003, 1004, 1005, 
=Dependencies expr for loc 1008
1 : retaddr_const : BV:32
=Dependencies for loc 1008


=FunctionName: move1
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BOOL
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-bitcast-src-expr-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : 1 : BV:1
3 : 0 : BV:1
4 : ite(1, 2, 3) : BV:1
5 : i1 : LANGTYPE
6 : islangtype(4, 5) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BOOL
2 : 1 : BV:1
3 : 0 : BV:1
4 : ite(1, 2, 3) : BV:1
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BOOL
2 : 1 : BV:1
3 : 0 : BV:1
4 : ite(1, 2, 3) : BV:1
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: move32
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-bitcast-src-expr-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1002, 1013, 1015, 999999
=live locs at E0.0.0
1002, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1002 : BV:32
=Dependencies for loc 1001
1002, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: mul_i32
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvmul(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvmul(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: mul_i32_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : 1234 : BV:32
2 : input.src.llvm-%a0_ARG : BV:32
3 : bvmul(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 1234 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : bvmul(1, 2) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: or
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BOOL
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BOOL
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BOOL
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BOOL
2 : input.src.llvm-%a1_ARG : BOOL
3 : or(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BOOL
2 : pred_dependency_keyword.1003 : BOOL
3 : or(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: ret0
=TFG:
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0

=Node: L0.1.0

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%hidden-reg
=Loc 1002.
src.llvm-callee-save.0
=Loc 1003.
src.llvm-callee-save.1
=Loc 1004.
src.llvm-callee-save.2
=Loc 1005.
src.llvm-callee-save.3
=Loc 1006.
src.llvm-contains_float_op
=Loc 1007.
src.llvm-contains_unsupported_op
=Loc 1008.
src.llvm-indir_tgt
=Loc 1009.
src.llvm-mem
=Loc 1010.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1011.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1012.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1

=Liveness
=live locs at L0.0.0
1010, 1012, 999999
=live locs at L0.1.0
1010, 1012, 999999
=live locs at E0.0.0
1010, 1012

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1001 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : pred_dependency_keyword.1003 : BV:32
4 : pred_dependency_keyword.1004 : BV:32
5 : pred_dependency_keyword.1005 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1001
1001, 1002, 1003, 1004, 1005, 
=Dependencies expr for loc 1008
1 : retaddr_const : BV:32
=Dependencies for loc 1008


=FunctionName: ret1
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-callee-save.0
=Loc 1005.
src.llvm-callee-save.1
=Loc 1006.
src.llvm-callee-save.2
=Loc 1007.
src.llvm-callee-save.3
=Loc 1008.
src.llvm-contains_float_op
=Loc 1009.
src.llvm-contains_unsupported_op
=Loc 1010.
src.llvm-indir_tgt
=Loc 1011.
src.llvm-mem
=Loc 1012.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1012, 1014, 999999
=live locs at L0.1.0
1002, 1012, 1014, 999999
=live locs at E0.0.0
1002, 1012, 1014

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1002 : BV:32
=Dependencies for loc 1001
1002, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1004 : BV:32
3 : pred_dependency_keyword.1005 : BV:32
4 : pred_dependency_keyword.1006 : BV:32
5 : pred_dependency_keyword.1007 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1004, 1005, 1006, 1007, 
=Dependencies expr for loc 1010
1 : retaddr_const : BV:32
=Dependencies for loc 1010


=FunctionName: sdiv_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1234 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1234 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.llvm-%a0_ARG : BV:32
5 : 2147483648 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : 1234 : BV:32
3 : bvsdiv(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 1 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : 2 : INT
4 : bvsign_ext(2, 3) : BV:34
5 : 32 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:33
8 : 0 : BV:1
9 : bvconcat(7, 8) : BV:34
10 : 31 : BV:34
11 : bvashr(9, 10) : BV:34
12 : 1 : INT
13 : bvextract(11, 5, 12) : BV:32
14 : bvnot(13) : BV:32
15 : 18446744072978641461 : BV:64
16 : bvsign_ext(2, 5) : BV:64
17 : bvmul(15, 16) : BV:64
18 : 63 : INT
19 : bvextract(17, 18, 5) : BV:32
20 : bvadd(2, 19) : BV:32
21 : bvsign_ext(20, 3) : BV:34
22 : bvextract(21, 5, 6) : BV:33
23 : bvconcat(22, 8) : BV:34
24 : 10 : BV:34
25 : bvashr(23, 24) : BV:34
26 : bvextract(25, 5, 12) : BV:32
27 : bvadd(1, 14, 26) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: sdiv_i32
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.llvm-%a0_ARG : BV:32
5 : 2147483648 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvsdiv(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvsdiv(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: sext1
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BOOL
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BOOL
2 : 1 : BV:1
3 : 0 : BV:1
4 : ite(1, 2, 3) : BV:1
5 : 31 : INT
6 : bvsign_ext(4, 5) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BOOL
2 : 4294967295 : BV:32
3 : 0 : BV:32
4 : ite(1, 2, 3) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: sext16
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:16
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:16
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:16
2 : i16 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:16
2 : 16 : INT
3 : bvsign_ext(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BV:16
2 : 16 : INT
3 : bvsign_ext(1, 2) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: sext8
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:8
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:8
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:8
2 : i8 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:8
2 : 24 : INT
3 : bvsign_ext(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BV:8
2 : 24 : INT
3 : bvsign_ext(1, 2) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: shl
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvshl(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvshl(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: shl_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : 1234 : BV:32
2 : input.src.llvm-%a0_ARG : BV:32
3 : bvshl(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 1234 : BV:32
2 : pred_dependency_keyword.1002 : BV:32
3 : bvshl(1, 2) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: srem_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1234 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1234 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.llvm-%a0_ARG : BV:32
5 : 2147483648 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : 1234 : BV:32
3 : bvsrem(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BV:32
2 : 1234 : BV:32
3 : bvsrem(1, 2) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: srem_i32
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.llvm-%a0_ARG : BV:32
5 : 2147483648 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvsrem(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvsrem(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: store1
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:8
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:8
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:8
2 : i8 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i8* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-align-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 1 : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-store-addr-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i8* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
undef-behaviour-align-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 1 : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.2
=Comment
undef-behaviour-store-data-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:8
2 : i8 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.1
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.0 : MEMLABEL
3 : input.src.llvm-%a1_ARG : BV:32
4 : input.src.llvm-%a0_ARG : BV:8
5 : 1 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%a1_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-callee-save.0
=Loc 1005.
src.llvm-callee-save.1
=Loc 1006.
src.llvm-callee-save.2
=Loc 1007.
src.llvm-callee-save.3
=Loc 1008.
src.llvm-contains_float_op
=Loc 1009.
src.llvm-contains_unsupported_op
=Loc 1010.
src.llvm-indir_tgt
=Loc 1011.
src.llvm-mem
=Loc 1012.
SLOT
=memname
src.llvm-mem
=addr
1 : input.src.llvm-%a1_ARG : BV:32
=nbytes
1
=bigendian
false
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1001, 1002, 1013, 1015, 999999
=live locs at L0.1.0
1001, 1002, 1013, 1015, 999999
=live locs at L0.2.0
1013, 1015, 999999
=live locs at E0.0.0
1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1011
1 : pred_dependency_keyword.1011 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:8
5 : 1 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1011
1001, 1002, 1011, 
=Dependencies expr for loc 1012
1 : pred_dependency_keyword.1001 : BV:8
=Dependencies for loc 1012
1001, 
=Dependencies expr for loc 1013
1 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:8
5 : 1 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1013
1001, 1002, 1013, 
=Dependencies expr for loc 1015
1 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:8
5 : 1 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1015
1001, 1002, 1015, 
=Dependencies expr for loc 1017
1 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:8
5 : 1 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1001, 1002, 1017, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1004 : BV:32
3 : pred_dependency_keyword.1005 : BV:32
4 : pred_dependency_keyword.1006 : BV:32
5 : pred_dependency_keyword.1007 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1004, 1005, 1006, 1007, 
=Dependencies expr for loc 1010
1 : retaddr_const : BV:32
=Dependencies for loc 1010


=FunctionName: store2
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:16
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:16
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:16
2 : i16 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i16* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-align-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 2 : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-store-addr-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i16* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
undef-behaviour-store-data-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:16
2 : i16 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.2
=Comment
undef-behaviour-align-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 1 : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.1
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.0 : MEMLABEL
3 : input.src.llvm-%a1_ARG : BV:32
4 : input.src.llvm-%a0_ARG : BV:16
5 : 2 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%a1_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-callee-save.0
=Loc 1005.
src.llvm-callee-save.1
=Loc 1006.
src.llvm-callee-save.2
=Loc 1007.
src.llvm-callee-save.3
=Loc 1008.
src.llvm-contains_float_op
=Loc 1009.
src.llvm-contains_unsupported_op
=Loc 1010.
src.llvm-indir_tgt
=Loc 1011.
src.llvm-mem
=Loc 1012.
SLOT
=memname
src.llvm-mem
=addr
1 : input.src.llvm-%a1_ARG : BV:32
=nbytes
2
=bigendian
false
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1001, 1002, 1013, 1015, 999999
=live locs at L0.1.0
1001, 1002, 1013, 1015, 999999
=live locs at L0.2.0
1013, 1015, 999999
=live locs at E0.0.0
1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1011
1 : pred_dependency_keyword.1011 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:16
5 : 2 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1011
1001, 1002, 1011, 
=Dependencies expr for loc 1012
1 : pred_dependency_keyword.1001 : BV:16
=Dependencies for loc 1012
1001, 
=Dependencies expr for loc 1013
1 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:16
5 : 2 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1013
1001, 1002, 1013, 
=Dependencies expr for loc 1015
1 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:16
5 : 2 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1015
1001, 1002, 1015, 
=Dependencies expr for loc 1017
1 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:16
5 : 2 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1001, 1002, 1017, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1004 : BV:32
3 : pred_dependency_keyword.1005 : BV:32
4 : pred_dependency_keyword.1006 : BV:32
5 : pred_dependency_keyword.1007 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1004, 1005, 1006, 1007, 
=Dependencies expr for loc 1010
1 : retaddr_const : BV:32
=Dependencies for loc 1010


=FunctionName: store4
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-align-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 4 : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-store-addr-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32* : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.1
=Comment
undef-behaviour-store-data-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.1.0.Invariant.2
=Comment
undef-behaviour-align-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 1 : INT
3 : islangaligned(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0

=Node: E0.0.0

=memlabel_map.0
mlvar.llvm.0 : memlabel-mem-symbol.4095.256.1-heap-arg.1
=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.0 : MEMLABEL
3 : input.src.llvm-%a1_ARG : BV:32
4 : input.src.llvm-%a0_ARG : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
src.llvm-%a0_ARG
=Loc 1002.
src.llvm-%a1_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-callee-save.0
=Loc 1005.
src.llvm-callee-save.1
=Loc 1006.
src.llvm-callee-save.2
=Loc 1007.
src.llvm-callee-save.3
=Loc 1008.
src.llvm-contains_float_op
=Loc 1009.
src.llvm-contains_unsupported_op
=Loc 1010.
src.llvm-indir_tgt
=Loc 1011.
src.llvm-mem
=Loc 1012.
SLOT
=memname
src.llvm-mem
=addr
1 : input.src.llvm-%a1_ARG : BV:32
=nbytes
4
=bigendian
false
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1001, 1002, 1013, 1015, 999999
=live locs at L0.1.0
1001, 1002, 1013, 1015, 999999
=live locs at L0.2.0
1013, 1015, 999999
=live locs at E0.0.0
1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1011
1 : pred_dependency_keyword.1011 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1011
1001, 1002, 1011, 
=Dependencies expr for loc 1012
1 : pred_dependency_keyword.1001 : BV:32
=Dependencies for loc 1012
1001, 
=Dependencies expr for loc 1013
1 : pred_dependency_keyword.1013 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1013
1001, 1002, 1013, 
=Dependencies expr for loc 1015
1 : pred_dependency_keyword.1015 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1015
1001, 1002, 1015, 
=Dependencies expr for loc 1017
1 : pred_dependency_keyword.1017 : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1-heap-arg.1 : MEMLABEL
3 : pred_dependency_keyword.1002 : BV:32
4 : pred_dependency_keyword.1001 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=Dependencies for loc 1017
1001, 1002, 1017, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1004 : BV:32
3 : pred_dependency_keyword.1005 : BV:32
4 : pred_dependency_keyword.1006 : BV:32
5 : pred_dependency_keyword.1007 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1004, 1005, 1006, 1007, 
=Dependencies expr for loc 1010
1 : retaddr_const : BV:32
=Dependencies for loc 1010


=FunctionName: sub_i32
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvsub(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : 4294967295 : BV:32
3 : pred_dependency_keyword.1003 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: ternary_op
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BOOL
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Input: llvm-method-arg.2
1 : input.src.llvm-%a2_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BOOL
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%a2_ARG
1 : input.src.llvm-%a2_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.2
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a2_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BOOL
2 : input.src.llvm-%a1_ARG : BV:32
3 : input.src.llvm-%a2_ARG : BV:32
4 : ite(1, 2, 3) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%a2_ARG
=Loc 1005.
src.llvm-%hidden-reg
=Loc 1006.
src.llvm-%trgt.0
=Loc 1007.
src.llvm-callee-save.0
=Loc 1008.
src.llvm-callee-save.1
=Loc 1009.
src.llvm-callee-save.2
=Loc 1010.
src.llvm-callee-save.3
=Loc 1011.
src.llvm-contains_float_op
=Loc 1012.
src.llvm-contains_unsupported_op
=Loc 1013.
src.llvm-indir_tgt
=Loc 1014.
src.llvm-mem
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1019.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1
=Loc 1020.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.2

=Liveness
=live locs at L0.0.0
1002, 1003, 1004, 1015, 1017, 999999
=live locs at L0.1.0
1002, 1003, 1004, 1015, 1017, 999999
=live locs at L0.2.0
1006, 1015, 1017, 999999
=live locs at E0.0.0
1001, 1015, 1017

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1006
1 : pred_dependency_keyword.1002 : BOOL
2 : pred_dependency_keyword.1003 : BV:32
3 : pred_dependency_keyword.1004 : BV:32
4 : ite(1, 2, 3) : BV:32
=Dependencies for loc 1006
1002, 1003, 1004, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1006 : BV:32
=Dependencies for loc 1001
1006, 
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1005 : BV:32
2 : pred_dependency_keyword.1007 : BV:32
3 : pred_dependency_keyword.1008 : BV:32
4 : pred_dependency_keyword.1009 : BV:32
5 : pred_dependency_keyword.1010 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1005
1005, 1007, 1008, 1009, 1010, 
=Dependencies expr for loc 1013
1 : retaddr_const : BV:32
=Dependencies for loc 1013


=FunctionName: udiv_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1234 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : 1234 : BV:32
3 : bvudiv(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 0 : BV:10
2 : 3564057141 : BV:64
3 : 0 : BV:32
4 : pred_dependency_keyword.1002 : BV:32
5 : bvconcat(3, 4) : BV:64
6 : bvmul(2, 5) : BV:64
7 : 63 : INT
8 : 42 : INT
9 : bvextract(6, 7, 8) : BV:22
10 : bvconcat(1, 9) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: udiv_i32
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvudiv(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvudiv(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: urem_i
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : 1234 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : 1234 : BV:32
3 : bvurem(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BV:32
2 : 1234 : BV:32
3 : bvurem(1, 2) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: urem_i32
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:32
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BV:32
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:32
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0
=L0.1.0.Invariant.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:32
2 : input.src.llvm-%a1_ARG : BV:32
3 : bvurem(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BV:32
2 : pred_dependency_keyword.1003 : BV:32
3 : bvurem(1, 2) : BV:32
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BV:32
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: xor
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BOOL
=Input: llvm-method-arg.1
1 : input.src.llvm-%a1_ARG : BOOL
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BOOL
=src.llvm-%a1_ARG
1 : input.src.llvm-%a1_ARG : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=L0.0.0.Invariant.1
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a1_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BOOL
2 : input.src.llvm-%a1_ARG : BOOL
3 : xor(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%a1_ARG
=Loc 1004.
src.llvm-%hidden-reg
=Loc 1005.
src.llvm-%trgt.0
=Loc 1006.
src.llvm-callee-save.0
=Loc 1007.
src.llvm-callee-save.1
=Loc 1008.
src.llvm-callee-save.2
=Loc 1009.
src.llvm-callee-save.3
=Loc 1010.
src.llvm-contains_float_op
=Loc 1011.
src.llvm-contains_unsupported_op
=Loc 1012.
src.llvm-indir_tgt
=Loc 1013.
src.llvm-mem
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1017.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0
=Loc 1018.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.1

=Liveness
=live locs at L0.0.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.1.0
1002, 1003, 1014, 1016, 999999
=live locs at L0.2.0
1005, 1014, 1016, 999999
=live locs at E0.0.0
1001, 1014, 1016

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1005
1 : pred_dependency_keyword.1002 : BOOL
2 : pred_dependency_keyword.1003 : BOOL
3 : xor(1, 2) : BOOL
=Dependencies for loc 1005
1002, 1003, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1005 : BOOL
=Dependencies for loc 1001
1005, 
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1004 : BV:32
2 : pred_dependency_keyword.1006 : BV:32
3 : pred_dependency_keyword.1007 : BV:32
4 : pred_dependency_keyword.1008 : BV:32
5 : pred_dependency_keyword.1009 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1004
1004, 1006, 1007, 1008, 1009, 
=Dependencies expr for loc 1012
1 : retaddr_const : BV:32
=Dependencies for loc 1012


=FunctionName: xor1
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BOOL
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BOOL
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BOOL
2 : 1 : BOOL
3 : xor(1, 2) : BOOL
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : pred_dependency_keyword.1002 : BOOL
2 : not(1) : BOOL
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BOOL
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: zext1
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BOOL
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BOOL
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BOOL
2 : i1 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BOOL
2 : 1 : BV:1
3 : 0 : BV:1
4 : ite(1, 2, 3) : BV:1
5 : 31 : INT
6 : bvzero_ext(4, 5) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 0 : BV:31
2 : pred_dependency_keyword.1002 : BOOL
3 : 1 : BV:1
4 : 0 : BV:1
5 : ite(2, 3, 4) : BV:1
6 : bvconcat(1, 5) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: zext16
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:16
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:16
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:16
2 : i16 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:16
2 : 16 : INT
3 : bvzero_ext(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 0 : BV:16
2 : pred_dependency_keyword.1002 : BV:16
3 : bvconcat(1, 2) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


=FunctionName: zext8
=TFG:
=Input: llvm-method-arg.0
1 : input.src.llvm-%a0_ARG : BV:8
=Node: E0.0.0
=Output: heap
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-heap : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Output: llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=Output: src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=Output: symbol.4095.256.1
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-symbol.4095.256.1 : MEMLABEL
3 : memmask(1, 2) : ARRAY[BV:32 -> BV:8]
=Symbol-map:
C_SYMBOL4095 : dst-rodata : 256 : 1
=String-contents:
=Nextpc-map:
=Locals-map:
=StartState:
=llvm-%ret-reg
1 : input.llvm-%ret-reg : BV:32
=src.llvm-%a0_ARG
1 : input.src.llvm-%a0_ARG : BV:8
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
=src.llvm-%trgt.0
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-callee-save.0
1 : input.src.llvm-callee-save.0 : BV:32
=src.llvm-callee-save.1
1 : input.src.llvm-callee-save.1 : BV:32
=src.llvm-callee-save.2
1 : input.src.llvm-callee-save.2 : BV:32
=src.llvm-callee-save.3
1 : input.src.llvm-callee-save.3 : BV:32
=src.llvm-contains_float_op
1 : input.src.llvm-contains_float_op : BOOL
=src.llvm-contains_unsupported_op
1 : input.src.llvm-contains_unsupported_op : BOOL
=src.llvm-indir_tgt
1 : input.src.llvm-indir_tgt : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]

=Node: L0.0.0
=L0.0.0.Invariant.0
=Comment
undef-behaviour-arg-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%a0_ARG : BV:8
2 : i8 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: L0.1.0

=Node: L0.2.0
=L0.2.0.Invariant.0
=Comment
undef-behaviour-ret-langtype-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.llvm-%trgt.0 : BV:32
2 : i32 : LANGTYPE
3 : islangtype(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL

=Node: E0.0.0

=Edge: L0.0.0 => L0.1.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=Edge: L0.1.0 => L0.2.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=src.llvm-%trgt.0
1 : input.src.llvm-%a0_ARG : BV:8
2 : 24 : INT
3 : bvzero_ext(1, 2) : BV:32
=Edge: L0.2.0 => E0.0.0
=EdgeCond: 
1 : 1 : BOOL
=StateTo: 
=llvm-%ret-reg
1 : input.src.llvm-%trgt.0 : BV:32
=src.llvm-%hidden-reg
1 : input.src.llvm-%hidden-reg : BV:32
2 : input.src.llvm-callee-save.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.llvm-callee-save.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.llvm-callee-save.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.llvm-callee-save.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32

=Locs
=Loc 1001.
llvm-%ret-reg
=Loc 1002.
src.llvm-%a0_ARG
=Loc 1003.
src.llvm-%hidden-reg
=Loc 1004.
src.llvm-%trgt.0
=Loc 1005.
src.llvm-callee-save.0
=Loc 1006.
src.llvm-callee-save.1
=Loc 1007.
src.llvm-callee-save.2
=Loc 1008.
src.llvm-callee-save.3
=Loc 1009.
src.llvm-contains_float_op
=Loc 1010.
src.llvm-contains_unsupported_op
=Loc 1011.
src.llvm-indir_tgt
=Loc 1012.
src.llvm-mem
=Loc 1013.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-heap
=Loc 1014.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-esp
=Loc 1015.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-symbol.4095.256.1
=Loc 1016.
MASKED
=memname
src.llvm-mem
=memlabel
memlabel-mem-arg.0

=Liveness
=live locs at L0.0.0
1002, 1013, 1015, 999999
=live locs at L0.1.0
1002, 1013, 1015, 999999
=live locs at L0.2.0
1004, 1013, 1015, 999999
=live locs at E0.0.0
1001, 1013, 1015

=Dependencies
=Dependencies for edge: L0.0.0 => L0.1.0
=Dependencies for edge: L0.1.0 => L0.2.0
=Dependencies expr for loc 1004
1 : 0 : BV:24
2 : pred_dependency_keyword.1002 : BV:8
3 : bvconcat(1, 2) : BV:32
=Dependencies for loc 1004
1002, 
=Dependencies for edge: L0.2.0 => E0.0.0
=Dependencies expr for loc 1001
1 : pred_dependency_keyword.1004 : BV:32
=Dependencies for loc 1001
1004, 
=Dependencies expr for loc 1003
1 : pred_dependency_keyword.1003 : BV:32
2 : pred_dependency_keyword.1005 : BV:32
3 : pred_dependency_keyword.1006 : BV:32
4 : pred_dependency_keyword.1007 : BV:32
5 : pred_dependency_keyword.1008 : BV:32
6 : bvxor(1, 2, 3, 4, 5) : BV:32
=Dependencies for loc 1003
1003, 1005, 1006, 1007, 1008, 
=Dependencies expr for loc 1011
1 : retaddr_const : BV:32
=Dependencies for loc 1011


