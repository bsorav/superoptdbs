ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 7 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:8
5 : 24 : INT
6 : bvzero_ext(4, 5) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = zext i8 %a0 to i32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
zext8:1
--
 exr0.1[0xff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 1 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:2
5 : 30 : INT
6 : bvzero_ext(4, 5) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = zext i2 %a0 to i32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
zext2:1
--
 exr0.1[0x3],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 15 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:16
5 : 16 : INT
6 : bvzero_ext(4, 5) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = zext i16 %a0 to i32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
zext16:1
--
 exr0.1[0xffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : bool_to_bv(5) : BV:1
7 : 31 : INT
8 : bvzero_ext(6, 7) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = zext i1 %a0 to i32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
zext1:1
--
 exr0.1[0x1],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 0 : INT
7 : bvextract(5, 6, 6) : BV:1
8 : 1 : BV:1
9 : eq(7, 8) : BOOL
10 : 1 : BOOL
11 : xor(9, 10) : BOOL
12 : bool_to_bv(11) : BV:1
13 : bvconcat(4, 12) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = xor i1 %a0, true
=pcrel_val
0
=pcrel_tag
tag_var
=comment
xor1:1
--
 exr0.1[0x1],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 0 : INT
7 : bvextract(5, 6, 6) : BV:1
8 : 1 : BV:1
9 : eq(7, 8) : BOOL
10 : input.src.exreg.0.2 : BV:32
11 : bvextract(10, 6, 6) : BV:1
12 : eq(11, 8) : BOOL
13 : xor(9, 12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(4, 14) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = xor i1 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
xor:1
--
 exr0.1[0x1], exr0.2[0x1],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.2 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvurem(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = urem i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
urem_i32:1
--
 exr0.0[0xffffffff], exr0.2[0xffffffff],
--
 exr0.1[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : const.0 : BV:32
3 : bvurem(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = urem i32 %a0, 1234
=pcrel_val
0
=pcrel_tag
tag_var
=comment
urem_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.2 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvudiv(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = udiv i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
udiv_i32:1
--
 exr0.0[0xffffffff], exr0.2[0xffffffff],
--
 exr0.1[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : const.0 : BV:32
3 : bvudiv(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = udiv i32 %a0, 1234
=pcrel_val
0
=pcrel_tag
tag_var
=comment
udiv_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : input.src.exreg.0.2 : BV:32
7 : input.src.exreg.0.3 : BV:32
8 : ite(5, 6, 7) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = select i1 %a0, i32 %a1, i32 %a2
=pcrel_val
0
=pcrel_tag
tag_var
=comment
ternary_op:1
--
 exr0.1[0x1], exr0.2[0xffffffff], exr0.3[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvsub(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = sub i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sub_i32:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.store4.0 : MEMLABEL
3 : input.src.exreg.0.0 : BV:32
4 : input.src.exreg.0.1 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: store i32 %a0, i32* %a1, align 1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
store4:1
--
 exr0.0[0xffffffff], exr0.1[0xffffffff],
--
--
--
0x0(%exvr0.0{d})[4]
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.store2.0 : MEMLABEL
3 : input.src.exreg.0.0 : BV:32
4 : input.src.exreg.0.1 : BV:32
5 : 15 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:16
8 : 2 : INT
9 : 0 : BOOL
10 : store(1, 2, 3, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: store i16 %a0, i16* %a1, align 1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
store2:1
--
 exr0.0[0xffffffff], exr0.1[0xffff],
--
--
--
0x0(%exvr0.0{d})[2]
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.store1.0 : MEMLABEL
3 : input.src.exreg.0.0 : BV:32
4 : input.src.exreg.0.1 : BV:32
5 : 7 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:8
8 : 1 : INT
9 : 0 : BOOL
10 : store(1, 2, 3, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: store i8 %a0, i8* %a1, align 1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
store1:1
--
 exr0.0[0xffffffff], exr0.1[0xff],
--
--
--
0x0(%exvr0.0{d})[1]
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.exreg.0.1 : BV:32
5 : const.0 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL
=precondition.1
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.2
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvsrem(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = srem i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
srem_i32:1
--
 exr0.0[0xffffffff], exr0.1[0xffffffff],
--
 exr0.2[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.exreg.0.0 : BV:32
5 : const.1 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL
=precondition.1
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.0 : BV:32
2 : const.0 : BV:32
3 : bvsrem(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = srem i32 %a0, 1234
=pcrel_val
0
=pcrel_tag
tag_var
=comment
srem_i:1
--
 exr0.0[0xffffffff],
--
 exr0.1[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.1
1 : const.0 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvshl(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = shl i32 1234, %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
shl_i:1
--
 exr0.0[0xffffffff],
--
 exr0.1[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.2 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvshl(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = shl i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
shl:1
--
 exr0.0[0xffffffff], exr0.2[0xffffffff],
--
 exr0.1[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 7 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:8
5 : 24 : INT
6 : bvsign_ext(4, 5) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = sext i8 %a0 to i32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sext8:1
--
 exr0.1[0xff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 1 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:2
5 : 30 : INT
6 : bvsign_ext(4, 5) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = sext i2 %a0 to i32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sext2:1
--
 exr0.1[0x3],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 15 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:16
5 : 16 : INT
6 : bvsign_ext(4, 5) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = sext i16 %a0 to i32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sext16:1
--
 exr0.1[0xffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : bool_to_bv(5) : BV:1
7 : 31 : INT
8 : bvsign_ext(6, 7) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = sext i1 %a0 to i32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sext1:1
--
 exr0.1[0x1],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.exreg.0.1 : BV:32
5 : const.0 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL
=precondition.1
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.2
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvsdiv(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = sdiv i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sdiv_i32:1
--
 exr0.0[0xffffffff], exr0.1[0xffffffff],
--
 exr0.2[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.exreg.0.0 : BV:32
5 : const.1 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL
=precondition.1
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.0 : BV:32
2 : const.0 : BV:32
3 : bvsdiv(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = sdiv i32 %a0, 1234
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sdiv_i:1
--
 exr0.0[0xffffffff],
--
 exr0.1[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => E0%0%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.2.0
1 : input.src.exreg.0.0 : BV:32
=src.exreg.3.0
1 : input.src.exreg.3.0 : BV:32
2 : input.src.exreg.1.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.exreg.1.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.exreg.1.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.exreg.1.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=tfg_edge.te_comment
0:0:0:1: ret i32 %a0
=comment
ret1:1
--
 exr0.0[0xffffffff], exr1.0[0xffffffff], exr1.1[0xffffffff], exr1.2[0xffffffff], exr1.3[0xffffffff],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => E0%0%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.3.0
1 : input.src.exreg.3.0 : BV:32
2 : input.src.exreg.1.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.exreg.1.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.exreg.1.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.exreg.1.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=tfg_edge.te_comment
0:0:0:1: ret void
=comment
ret0:1
--
 exr1.0[0xffffffff], exr1.1[0xffffffff], exr1.2[0xffffffff], exr1.3[0xffffffff],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 0 : INT
7 : bvextract(5, 6, 6) : BV:1
8 : 1 : BV:1
9 : eq(7, 8) : BOOL
10 : input.src.exreg.0.2 : BV:32
11 : bvextract(10, 6, 6) : BV:1
12 : eq(11, 8) : BOOL
13 : or(9, 12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(4, 14) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = or i1 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
or:1
--
 exr0.1[0x1], exr0.2[0x1],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : const.0 : BV:32
2 : input.src.exreg.0.1 : BV:32
3 : bvmul(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = mul i32 1234, %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
mul_i32_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvmul(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = mul i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
mul_i32:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = bitcast i32 %a0 to i32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
move32:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 0 : INT
7 : bvextract(5, 6, 6) : BV:1
8 : 1 : BV:1
9 : eq(7, 8) : BOOL
10 : bool_to_bv(9) : BV:1
11 : bvconcat(4, 10) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = bitcast i1 %a0 to i1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
move1:1
--
 exr0.1[0x1],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%0%1 => L0%1%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=tfg_edge.te_comment
-1:INVALID:0:-1:start_pc_edge
=pcrel_val
0
=pcrel_tag
tag_var
=comment
main:0
--
--
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.2 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvlshr(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = lshr i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
lshr:1
--
 exr0.0[0xffffffff], exr0.2[0xffffffff],
--
 exr0.1[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.load4.0 : MEMLABEL
3 : input.src.exreg.0.1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = load i32, i32* %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
load4:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0xffffffff],
--
0x0(%exvr0.1{d})[4]
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 16 : INT
4 : bvextract(1, 2, 3) : BV:16
5 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.llvm.load2.0 : MEMLABEL
7 : input.src.exreg.0.1 : BV:32
8 : 2 : INT
9 : 0 : BOOL
10 : select(5, 6, 7, 8, 9) : BV:16
11 : bvconcat(4, 10) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = load i16, i16* %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
load2:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0xffff],
--
0x0(%exvr0.1{d})[2]
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 8 : INT
4 : bvextract(1, 2, 3) : BV:24
5 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.llvm.load1.0 : MEMLABEL
7 : input.src.exreg.0.1 : BV:32
8 : 1 : INT
9 : 0 : BOOL
10 : select(5, 6, 7, 8, 9) : BV:8
11 : bvconcat(4, 10) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = load i8, i8* %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
load1:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0xff],
--
0x0(%exvr0.1{d})[1]
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvult(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp ult i32 1234, %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ult_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvult(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp ult i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ult:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvule(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp ule i32 1234, %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ule_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvule(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp ule i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ule:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : const.0 : BV:32
7 : bvugt(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp ugt i32 %a0, 1234
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ugt_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvugt(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp ugt i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ugt:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvuge(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp uge i32 1234, %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_uge_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvuge(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp uge i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_uge:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvslt(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp slt i32 1234, %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_slt_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvslt(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp slt i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_slt:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvsle(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp sle i32 1234, %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sle_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvsle(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp sle i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sle:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvsgt(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp sgt i32 1234, %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sgt_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvsgt(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp sgt i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sgt:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvsge(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp sge i32 1234, %a0
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sge_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvsge(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp sge i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sge:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : const.0 : BV:32
7 : eq(5, 6) : BOOL
8 : not(7) : BOOL
9 : bool_to_bv(8) : BV:1
10 : bvconcat(4, 9) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp ne i32 %a0, 1234
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ne_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 7 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:8
9 : input.src.exreg.0.2 : BV:32
10 : bvextract(9, 6, 7) : BV:8
11 : eq(8, 10) : BOOL
12 : not(11) : BOOL
13 : bool_to_bv(12) : BV:1
14 : bvconcat(4, 13) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp ne i8 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ne8:1
--
 exr0.1[0xff], exr0.2[0xff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : eq(5, 6) : BOOL
8 : not(7) : BOOL
9 : bool_to_bv(8) : BV:1
10 : bvconcat(4, 9) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp ne i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ne:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : const.0 : BV:32
7 : eq(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp eq i32 %a0, 1234
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_eq_i:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 7 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:8
9 : input.src.exreg.0.2 : BV:32
10 : bvextract(9, 6, 7) : BV:8
11 : eq(8, 10) : BOOL
12 : bool_to_bv(11) : BV:1
13 : bvconcat(4, 12) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp eq i8 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_eq8:1
--
 exr0.1[0xff], exr0.2[0xff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : eq(5, 6) : BOOL
8 : bool_to_bv(7) : BV:1
9 : bvconcat(4, 8) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = icmp eq i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_eq:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%100003 => L0%1%100004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : const.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = getelementptr [1234 x [2345 x i8]], [1234 x [2345 x i8]]* %a0, i32 %a1, i32 %a2
=pcrel_val
0
=pcrel_tag
tag_var
=comment
gep:2
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%1%100004
=tfg_edge.EdgeCond:
1 : input.src.exreg.0.0 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=tfg_edge.StateTo:
=tfg_edge.te_comment
0:0:0:1: br i1 %a0, label %1, label %3
=pcrel_val
0
=pcrel_tag
tag_var
=tfg_edge: L0%1%1 => L0%1%100003
=tfg_edge.EdgeCond:
1 : input.src.exreg.0.0 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=tfg_edge.StateTo:
=tfg_edge.te_comment
0:0:0:1: br i1 %a0, label %1, label %3
=pcrel_val
1
=pcrel_tag
tag_var
=comment
cbranch:1
--
 exr0.0[0x1],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200011 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : func.call.8.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_8.0 : MEMLABEL
3 : mlcall.llvm.call_r_8.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : input.src.exreg.0.7 : BV:32
14 : input.src.exreg.0.8 : BV:32
15 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : BV:32
=src.llvm-mem
1 : func.call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_8.0 : MEMLABEL
3 : mlcall.llvm.call_r_8.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : input.src.exreg.0.7 : BV:32
14 : input.src.exreg.0.8 : BV:32
15 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = call i32 @callee_r_8(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5, i32 %a6, i32 %a7)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_8:10
--
 exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff], exr0.7[0xffffffff], exr0.8[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200010 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : func.call.7.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_7.0 : MEMLABEL
3 : mlcall.llvm.call_r_7.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : input.src.exreg.0.7 : BV:32
14 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13) : BV:32
=src.llvm-mem
1 : func.call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_7.0 : MEMLABEL
3 : mlcall.llvm.call_r_7.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : input.src.exreg.0.7 : BV:32
14 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = call i32 @callee_r_7(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5, i32 %a6)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_7:9
--
 exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff], exr0.7[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200009 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : func.call.6.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_6.0 : MEMLABEL
3 : mlcall.llvm.call_r_6.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : BV:32
=src.llvm-mem
1 : func.call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_6.0 : MEMLABEL
3 : mlcall.llvm.call_r_6.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = call i32 @callee_r_6(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_6:8
--
 exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200008 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : func.call.5.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_5.0 : MEMLABEL
3 : mlcall.llvm.call_r_5.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) : BV:32
=src.llvm-mem
1 : func.call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_5.0 : MEMLABEL
3 : mlcall.llvm.call_r_5.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = call i32 @callee_r_5(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_5:7
--
 exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200007 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : func.call.4.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_4.0 : MEMLABEL
3 : mlcall.llvm.call_r_4.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) : BV:32
=src.llvm-mem
1 : func.call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_4.0 : MEMLABEL
3 : mlcall.llvm.call_r_4.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = call i32 @callee_r_4(i32 %a0, i32 %a1, i32 %a2, i32 %a3)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_4:6
--
 exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200006 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : func.call.3.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_3.0 : MEMLABEL
3 : mlcall.llvm.call_r_3.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9) : BV:32
=src.llvm-mem
1 : func.call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_3.0 : MEMLABEL
3 : mlcall.llvm.call_r_3.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = call i32 @callee_r_3(i32 %a0, i32 %a1, i32 %a2)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_3:5
--
 exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200005 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : func.call.2.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_2.0 : MEMLABEL
3 : mlcall.llvm.call_r_2.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : function_call(1, 2, 3, 4, 5, 6, 7, 8) : BV:32
=src.llvm-mem
1 : func.call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_2.0 : MEMLABEL
3 : mlcall.llvm.call_r_2.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : function_call(1, 2, 3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = call i32 @callee_r_2(i32 %a0, i32 %a1)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_2:4
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200004 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : func.call.1.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_1.0 : MEMLABEL
3 : mlcall.llvm.call_r_1.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 7) : BV:32
=src.llvm-mem
1 : func.call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_1.0 : MEMLABEL
3 : mlcall.llvm.call_r_1.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = call i32 @callee_r_1(i32 %a0)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_1:3
--
 exr0.1[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200003 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : func.call.0.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID -> BV:32]
2 : mlcall.llvm.call_r_0.0 : MEMLABEL
3 : mlcall.llvm.call_r_0.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : function_call(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-mem
1 : func.call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_0.0 : MEMLABEL
3 : mlcall.llvm.call_r_0.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : function_call(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = call i32 @callee_r_0()
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_0:2
--
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200011 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : func.call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_8.0 : MEMLABEL
3 : mlcall.llvm.call_8.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : input.src.exreg.0.3 : BV:32
11 : input.src.exreg.0.4 : BV:32
12 : input.src.exreg.0.5 : BV:32
13 : input.src.exreg.0.6 : BV:32
14 : input.src.exreg.0.7 : BV:32
15 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: call void @callee_8(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5, i32 %a6, i32 %a7)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_8:10
--
 exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff], exr0.7[0xffffffff],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200010 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : func.call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_7.0 : MEMLABEL
3 : mlcall.llvm.call_7.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : input.src.exreg.0.3 : BV:32
11 : input.src.exreg.0.4 : BV:32
12 : input.src.exreg.0.5 : BV:32
13 : input.src.exreg.0.6 : BV:32
14 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: call void @callee_7(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5, i32 %a6)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_7:9
--
 exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200009 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : func.call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_6.0 : MEMLABEL
3 : mlcall.llvm.call_6.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : input.src.exreg.0.3 : BV:32
11 : input.src.exreg.0.4 : BV:32
12 : input.src.exreg.0.5 : BV:32
13 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: call void @callee_6(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4, i32 %a5)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_6:8
--
 exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200008 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : func.call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_5.0 : MEMLABEL
3 : mlcall.llvm.call_5.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : input.src.exreg.0.3 : BV:32
11 : input.src.exreg.0.4 : BV:32
12 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: call void @callee_5(i32 %a0, i32 %a1, i32 %a2, i32 %a3, i32 %a4)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_5:7
--
 exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200007 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : func.call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_4.0 : MEMLABEL
3 : mlcall.llvm.call_4.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : input.src.exreg.0.3 : BV:32
11 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: call void @callee_4(i32 %a0, i32 %a1, i32 %a2, i32 %a3)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_4:6
--
 exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200006 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : func.call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_3.0 : MEMLABEL
3 : mlcall.llvm.call_3.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: call void @callee_3(i32 %a0, i32 %a1, i32 %a2)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_3:5
--
 exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200005 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : func.call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_2.0 : MEMLABEL
3 : mlcall.llvm.call_2.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : function_call(1, 2, 3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: call void @callee_2(i32 %a0, i32 %a1)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_2:4
--
 exr0.0[0xffffffff], exr0.1[0xffffffff],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200004 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : func.call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_1.0 : MEMLABEL
3 : mlcall.llvm.call_1.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: call void @callee_1(i32 %a0)
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_1:3
--
 exr0.0[0xffffffff],
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%200003 => L0%1%300004
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.llvm-mem
1 : func.call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_0.0 : MEMLABEL
3 : mlcall.llvm.call_0.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : function_call(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: call void @callee_0()
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_0:2
--
--
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 4294967295 : BV:32
3 : bvxor(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = xor i32 %a0, -1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
bvxor1:1
--
 exr0.1[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvxor(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = xor i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
bvxor:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvor(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = or i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
bvor:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvand(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = and i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
bvand:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%1%100003
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=tfg_edge.te_comment
0:0:0:1: br label %1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
branch:1
--
--
--
--
==
ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.2 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvashr(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = ashr i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
ashr:1
--
 exr0.0[0xffffffff], exr0.2[0xffffffff],
--
 exr0.1[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 0 : INT
7 : bvextract(5, 6, 6) : BV:1
8 : 1 : BV:1
9 : eq(7, 8) : BOOL
10 : input.src.exreg.0.2 : BV:32
11 : bvextract(10, 6, 6) : BV:1
12 : eq(11, 8) : BOOL
13 : and(9, 12) : BOOL
14 : bool_to_bv(13) : BV:1
15 : bvconcat(4, 14) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = and i1 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
and:1
--
 exr0.1[0x1], exr0.2[0x1],
--
 exr0.0[0x1],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : const.0 : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-local.0.1234.0 : MEMLABEL
3 : const.0 : BV:32
4 : const.1 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> BV:8]
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = alloca [1234 x i8], align 1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
alloca:1
--
--
 exr0.0[0xffffffff],
--
--
==
ENTRY:
=etfg_insn
=tfg_edge: L0%1%1 => L0%2%1
=tfg_edge.EdgeCond:
1 : 1 : BOOL
=tfg_edge.StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvadd(1, 2) : BV:32
=tfg_edge.te_comment
0:0:0:1: %trgt.0 = add i32 %a0, %a1
=pcrel_val
0
=pcrel_tag
tag_var
=comment
add_i32:1
--
 exr0.1[0xffffffff], exr0.2[0xffffffff],
--
 exr0.0[0xffffffff],
--
--
==
