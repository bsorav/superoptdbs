ENTRY:
=etfg_insn
=tfg_edge
L0%0%1 => L0%1%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=pcrel_val
0
=pcrel_tag
tag_var
=comment
main:0
--
live :#
memlive : false
--
in_tmap:
out_tmap.0:
--
fixed_reg_mappings
--
.i0: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%1%100003
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=pcrel_val
0
=pcrel_tag
tag_var
=comment
branch:1
--
live :#
memlive : false
--
in_tmap:
out_tmap.0:
--
fixed_reg_mappings
--
.i0: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 7 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:8
5 : 24 : INT
6 : bvzero_ext(4, 5) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
zext8:1
--
live : exr0.0[0xffffffff], exr0.1[0xff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.0D
out_tmap.0:
exvr0.0 : exvr0.1S
exvr0.1 : exvr0.0D
--
fixed_reg_mappings
--
.i0: movzbl %exvr0.0b,%exvr0.1d #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 15 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:16
5 : 16 : INT
6 : bvzero_ext(4, 5) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
zext16:1
--
live : exr0.0[0xffffffff], exr0.1[0xffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movzwl %exvr0.1w,%exvr0.0d #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 7 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:8
5 : 24 : INT
6 : bvsign_ext(4, 5) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sext8:1
--
live : exr0.0[0xffffffff], exr0.1[0xff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.0D
out_tmap.0:
exvr0.0 : exvr0.1S
exvr0.1 : exvr0.0D
--
fixed_reg_mappings
--
.i0: movsbl %exvr0.0b,%exvr0.1d #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 15 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:16
5 : 16 : INT
6 : bvsign_ext(4, 5) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sext16:1
--
live : exr0.0[0xffffffff], exr0.1[0xffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movswl %exvr0.1w,%exvr0.0d #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
move32:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 0 : INT
7 : bvextract(5, 6, 6) : BV:1
8 : 1 : BV:1
9 : eq(7, 8) : BOOL
10 : 0 : BV:1
11 : ite(9, 8, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
move1:1
--
live : exr0.0[0x1], exr0.1[0x1],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => E0%0%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.3.0
1 : input.src.exreg.3.0 : BV:32
2 : input.src.exreg.1.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.exreg.1.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.exreg.1.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.exreg.1.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=comment
ret0:1
--
live : exr1.0[0xffffffff], exr1.1[0xffffffff], exr1.2[0xffffffff], exr1.3[0xffffffff],#
memlive : false
--
in_tmap:
exvr1.0 : exvr0.3S
exvr1.1 : exvr0.5S
exvr1.2 : exvr0.6S
exvr1.3 : exvr0.7S
out_tmap.0:
exvr1.0 : exvr0.3S
exvr1.1 : exvr0.5S
exvr1.2 : exvr0.6S
exvr1.3 : exvr0.7S
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: retl  #%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : const.0 : BV:32
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : memlabel-mem-local.0.1234.0 : MEMLABEL
3 : const.0 : BV:32
4 : const.1 : BV:32
5 : alloca(1, 2, 3, 4) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=comment
alloca:1
--
live : exr0.0[0xffffffff],#
memlive : false
--
in_tmap:
out_tmap.0:
exvr0.0 : exvr0.0S
--
fixed_reg_mappings
--
.i0: leal %exvr4.0w:C0,%exvr0.0d #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 1 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:2
5 : 30 : INT
6 : bvzero_ext(4, 5) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
zext2:1
--
live : exr0.0[0xffffffff], exr0.1[0x3],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: andl $0x3,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
8 : 31 : INT
9 : bvzero_ext(7, 8) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
zext1:1
--
live : exr0.0[0xffffffff], exr0.1[0x1],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: andl $0x1,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 0 : INT
7 : bvextract(5, 6, 6) : BV:1
8 : 1 : BV:1
9 : eq(7, 8) : BOOL
10 : 1 : BOOL
11 : xor(9, 10) : BOOL
12 : 0 : BV:1
13 : ite(11, 8, 12) : BV:1
14 : bvconcat(4, 13) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
xor1:1
--
live : exr0.0[0x1], exr0.1[0x1],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: xorb $0x1,%exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.store4.0 : MEMLABEL
3 : input.src.exreg.0.0 : BV:32
4 : input.src.exreg.0.1 : BV:32
5 : 4 : INT
6 : 0 : BOOL
7 : store(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=comment
store4:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : true
--
in_tmap:
exvr0.0 : exvr0.0D
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0D
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr4.0w:0x0(%exvr0.0d) #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.store2.0 : MEMLABEL
3 : input.src.exreg.0.0 : BV:32
4 : input.src.exreg.0.1 : BV:32
5 : 15 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:16
8 : 2 : INT
9 : 0 : BOOL
10 : store(1, 2, 3, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=comment
store2:1
--
live : exr0.0[0xffffffff], exr0.1[0xffff],#
memlive : true
--
in_tmap:
exvr0.0 : exvr0.0D
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0D
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movw %exvr0.1w,%exvr4.0w:0x0(%exvr0.0d) #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.store1.0 : MEMLABEL
3 : input.src.exreg.0.0 : BV:32
4 : input.src.exreg.0.1 : BV:32
5 : 7 : INT
6 : 0 : INT
7 : bvextract(4, 5, 6) : BV:8
8 : 1 : INT
9 : 0 : BOOL
10 : store(1, 2, 3, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=comment
store1:1
--
live : exr0.0[0xffffffff], exr0.1[0xff],#
memlive : true
--
in_tmap:
exvr0.0 : exvr0.1D
exvr0.1 : exvr0.0D
out_tmap.0:
exvr0.0 : exvr0.1D
exvr0.1 : exvr0.0D
--
fixed_reg_mappings
--
.i0: movb %exvr0.0b,%exvr4.0w:0x0(%exvr0.1d) #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
2 : mlvar.llvm.load4.0 : MEMLABEL
3 : input.src.exreg.0.1 : BV:32
4 : 4 : INT
5 : 0 : BOOL
6 : select(1, 2, 3, 4, 5) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
load4:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : true
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr4.0w:0x0(%exvr0.1d),%exvr0.0d #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 16 : INT
4 : bvextract(1, 2, 3) : BV:16
5 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.llvm.load2.0 : MEMLABEL
7 : input.src.exreg.0.1 : BV:32
8 : 2 : INT
9 : 0 : BOOL
10 : select(5, 6, 7, 8, 9) : BV:16
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
load2:1
--
live : exr0.0[0xffff], exr0.1[0xffffffff],#
memlive : true
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movzwl %exvr4.0w:0x0(%exvr0.1d),%exvr0.0d #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 8 : INT
4 : bvextract(1, 2, 3) : BV:24
5 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
6 : mlvar.llvm.load1.0 : MEMLABEL
7 : input.src.exreg.0.1 : BV:32
8 : 1 : INT
9 : 0 : BOOL
10 : select(5, 6, 7, 8, 9) : BV:8
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
load1:1
--
live : exr0.0[0xff], exr0.1[0xffffffff],#
memlive : true
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movb %exvr4.0w:0x0(%exvr0.1d),%exvr0.0b #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvult(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ult_i:1
--
live : exr0.0[0x1], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpl $C0,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: seta %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvule(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ule_i:1
--
live : exr0.0[0x1], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpl $C0,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setae %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : const.0 : BV:32
7 : bvugt(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ugt_i:1
--
live : exr0.0[0x1], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpl $C0,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: seta %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvuge(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_uge_i:1
--
live : exr0.0[0x1], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpl $C0,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setbe %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvslt(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_slt_i:1
--
live : exr0.0[0x1], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpl $C0,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setg %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvsle(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sle_i:1
--
live : exr0.0[0x1], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpl $C0,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setge %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvsgt(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sgt_i:1
--
live : exr0.0[0x1], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpl $C0,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setl %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : const.0 : BV:32
6 : input.src.exreg.0.1 : BV:32
7 : bvsge(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sge_i:1
--
live : exr0.0[0x1], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpl $C0,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setle %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : const.0 : BV:32
7 : eq(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ne_i:1
--
live : exr0.0[0x1], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpl $C0,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setne %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : const.0 : BV:32
7 : eq(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_eq_i:1
--
live : exr0.0[0x1], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpl $C0,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: sete %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 4294967295 : BV:32
3 : bvxor(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
bvxor1:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: notl %exvr0.0d #
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 0 : INT
7 : bvextract(5, 6, 6) : BV:1
8 : 1 : BV:1
9 : eq(7, 8) : BOOL
10 : input.src.exreg.0.2 : BV:32
11 : bvextract(10, 6, 6) : BV:1
12 : eq(11, 8) : BOOL
13 : xor(9, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 8, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
xor:1
--
live : exr0.0[0x1], exr0.1[0x1], exr0.2[0x1],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: xorl %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvsub(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sub_i32:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: subl %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 0 : INT
7 : bvextract(5, 6, 6) : BV:1
8 : 1 : BV:1
9 : eq(7, 8) : BOOL
10 : input.src.exreg.0.2 : BV:32
11 : bvextract(10, 6, 6) : BV:1
12 : eq(11, 8) : BOOL
13 : or(9, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 8, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
or:1
--
live : exr0.0[0x1], exr0.1[0x1], exr0.2[0x1],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: orl %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvult(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ult:1
--
live : exr0.0[0x1], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: cmpl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setb %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvule(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ule:1
--
live : exr0.0[0x1], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: cmpl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setbe %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvugt(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ugt:1
--
live : exr0.0[0x1], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: cmpl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: seta %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvuge(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_uge:1
--
live : exr0.0[0x1], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: cmpl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setae %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvslt(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_slt:1
--
live : exr0.0[0x1], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: cmpl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setl %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvsle(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sle:1
--
live : exr0.0[0x1], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: cmpl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setle %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvsgt(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sgt:1
--
live : exr0.0[0x1], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: cmpl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setg %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : bvsge(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_sge:1
--
live : exr0.0[0x1], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: cmpl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setge %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 7 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:8
9 : input.src.exreg.0.2 : BV:32
10 : bvextract(9, 6, 7) : BV:8
11 : eq(8, 10) : BOOL
12 : not(11) : BOOL
13 : 1 : BV:1
14 : 0 : BV:1
15 : ite(12, 13, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ne8:1
--
live : exr0.0[0x1], exr0.1[0xff], exr0.2[0xff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.0D
exvr0.2 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.2S
exvr0.1 : exvr0.0D
exvr0.2 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpb %exvr0.1b,%exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setne %exvr0.2b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : eq(5, 6) : BOOL
8 : not(7) : BOOL
9 : 1 : BV:1
10 : 0 : BV:1
11 : ite(8, 9, 10) : BV:1
12 : bvconcat(4, 11) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_ne:1
--
live : exr0.0[0x1], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: cmpl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: setne %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 7 : INT
7 : 0 : INT
8 : bvextract(5, 6, 7) : BV:8
9 : input.src.exreg.0.2 : BV:32
10 : bvextract(9, 6, 7) : BV:8
11 : eq(8, 10) : BOOL
12 : 1 : BV:1
13 : 0 : BV:1
14 : ite(11, 12, 13) : BV:1
15 : bvconcat(4, 14) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_eq8:1
--
live : exr0.0[0x1], exr0.1[0xff], exr0.2[0xff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.0D
exvr0.2 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.2S
exvr0.1 : exvr0.0D
exvr0.2 : exvr0.1D
--
fixed_reg_mappings
--
.i0: cmpb %exvr0.1b,%exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: sete %exvr0.2b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : input.src.exreg.0.2 : BV:32
7 : eq(5, 6) : BOOL
8 : 1 : BV:1
9 : 0 : BV:1
10 : ite(7, 8, 9) : BV:1
11 : bvconcat(4, 10) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
icmp_eq:1
--
live : exr0.0[0x1], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: cmpl %exvr0.2d,%exvr0.1d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: sete %exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvxor(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
bvxor:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: xorl %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvor(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
bvor:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: orl %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvand(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
bvand:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: andl %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.0 : BV:32
2 : 31 : INT
3 : 1 : INT
4 : bvextract(1, 2, 3) : BV:31
5 : input.src.exreg.0.1 : BV:32
6 : 0 : INT
7 : bvextract(5, 6, 6) : BV:1
8 : 1 : BV:1
9 : eq(7, 8) : BOOL
10 : input.src.exreg.0.2 : BV:32
11 : bvextract(10, 6, 6) : BV:1
12 : eq(11, 8) : BOOL
13 : and(9, 12) : BOOL
14 : 0 : BV:1
15 : ite(13, 8, 14) : BV:1
16 : bvconcat(4, 15) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
and:1
--
live : exr0.0[0x1], exr0.1[0x1], exr0.2[0x1],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: andl %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvadd(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
add_i32:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: leal %exvr4.0w:0x0(%exvr0.1d,%exvr0.2d,1),%exvr0.0d #
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : input.src.exreg.0.2 : BV:32
7 : input.src.exreg.0.3 : BV:32
8 : ite(5, 6, 7) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
ternary_op:1
--
live : exr0.0[0xffffffff], exr0.1[0x1], exr0.2[0xffffffff], exr0.3[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.0D
exvr0.2 : exvr0.2D
exvr0.3 : exvr0.3D
out_tmap.0:
exvr0.0 : exvr0.1S
exvr0.1 : exvr0.0D
exvr0.2 : exvr0.2D
exvr0.3 : exvr0.3D
--
fixed_reg_mappings
--
.i0: testl $0x1,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: je .i4 #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: movl %exvr0.2d,%exvr0.1d #
.i3: jmp .NEXTPC0x0 #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => E0%0%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.2.0
1 : input.src.exreg.0.0 : BV:32
=src.exreg.3.0
1 : input.src.exreg.3.0 : BV:32
2 : input.src.exreg.1.0 : BV:32
3 : bvxor(1, 2) : BV:32
4 : input.src.exreg.1.1 : BV:32
5 : bvxor(3, 4) : BV:32
6 : input.src.exreg.1.2 : BV:32
7 : bvxor(5, 6) : BV:32
8 : input.src.exreg.1.3 : BV:32
9 : bvxor(7, 8) : BV:32
=src.llvm-indir_tgt
1 : retaddr_const : BV:32
=comment
ret1:1
--
live : exr0.0[0xffffffff], exr1.0[0xffffffff], exr1.1[0xffffffff], exr1.2[0xffffffff], exr1.3[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.1D
exvr1.0 : exvr0.3S
exvr1.1 : exvr0.5S
exvr1.2 : exvr0.6S
exvr1.3 : exvr0.7S
out_tmap.0:
exvr0.0 : exvr0.1D
exvr1.0 : exvr0.3S
exvr1.1 : exvr0.5S
exvr1.2 : exvr0.6S
exvr1.3 : exvr0.7S
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: retl  #%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.0d,%exvr0.7d,%exvr0.6d,%exvr0.5d,%exvr0.3d
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%1%100004
=tfg_edge_EdgeCond:
1 : input.src.exreg.0.0 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : not(5) : BOOL
=tfg_edge_StateTo:
=pcrel_val
0
=pcrel_tag
tag_var
=tfg_edge
L0%1%1 => L0%1%100003
=tfg_edge_EdgeCond:
1 : input.src.exreg.0.0 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
=tfg_edge_StateTo:
=pcrel_val
1
=pcrel_tag
tag_var
=comment
cbranch:1
--
live : exr0.0[0x1],# exr0.0[0x1],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.0D
out_tmap.0:
exvr0.0 : exvr0.0D
out_tmap.1:
exvr0.0 : exvr0.0D
--
fixed_reg_mappings
--
.i0: testb $0x1,%exvr0.0b #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: je .NEXTPC0x0 #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.1
1 : const.0 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvshl(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
shl_i:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.1D
exvr0.1 : exvr0.0S
--
fixed_reg_mappings
--
.i0: movl $C0,%exvr0.0d #
.i1: shll %exvr0.1b,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 1 : INT
3 : 0 : INT
4 : bvextract(1, 2, 3) : BV:2
5 : 30 : INT
6 : bvsign_ext(4, 5) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sext2:1
--
live : exr0.0[0xffffffff], exr0.1[0x3],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: shll $0x1e,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: sarl $0x1e,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i3: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : 0 : INT
3 : bvextract(1, 2, 2) : BV:1
4 : 1 : BV:1
5 : eq(3, 4) : BOOL
6 : 0 : BV:1
7 : ite(5, 4, 6) : BV:1
8 : 31 : INT
9 : bvsign_ext(7, 8) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sext1:1
--
live : exr0.0[0xffffffff], exr0.1[0x1],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: andl $0x1,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: negl %exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i3: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : const.0 : BV:32
2 : input.src.exreg.0.1 : BV:32
3 : bvmul(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
mul_i32_i:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
--
fixed_reg_mappings
--
.i0: imull $C0,%exvr0.1d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : bvmul(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
mul_i32:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.1D
exvr0.2 : exvr0.2D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: imull %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-gepoffset-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : input.src.exreg.0.1 : BV:32
3 : input.src.exreg.0.2 : BV:32
4 : const.0 : BV:32
5 : bvmul(3, 4) : BV:32
6 : bvadd(2, 5) : BV:32
7 : bvadd(1, 6) : BV:32
8 : isgepoffset(7, 5) : BOOL
=RhsExpr
1 : 1 : BOOL
=precondition.1
=Comment
undef-behaviour-indexforsize-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.2 : BV:32
2 : 32 : INT
3 : bvsign_ext(1, 2) : BV:64
4 : const.0 : BV:32
5 : bvzero_ext(4, 2) : BV:64
6 : bvmul(3, 5) : BV:64
7 : 63 : INT
8 : bvextract(6, 7, 2) : BV:32
9 : 2345 : INT
10 : isindexforsize(8, 9) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%100003 => L0%1%100004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.3
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.2 : BV:32
3 : const.0 : BV:32
4 : bvmul(2, 3) : BV:32
5 : bvadd(1, 4) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
gep:2
--
live : exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.2D
exvr0.2 : exvr0.1D
out_tmap.0:
exvr0.1 : exvr0.2D
exvr0.2 : exvr0.1D
exvr0.3 : exvr0.0S
--
fixed_reg_mappings
--
.i0: imull $C0,%exvr0.1d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i1: addl %exvr0.2d,%exvr0.0d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i2: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.2 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvshl(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
shl:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.3D
exvr0.2 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.3D
exvr0.1 : exvr0.2S
exvr0.2 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: movl %exvr0.1d,%exvr0.2d #
.i2: movl %exvr0.3d,%exvr0.1d #
.i3: shll %exvr0.1b,%exvr0.2d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i4: movl %exvr0.0d,%exvr0.1d #
.i5: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.2 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvlshr(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
lshr:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.3D
exvr0.2 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.3D
exvr0.1 : exvr0.2S
exvr0.2 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: movl %exvr0.1d,%exvr0.2d #
.i2: movl %exvr0.3d,%exvr0.1d #
.i3: shrl %exvr0.1b,%exvr0.2d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i4: movl %exvr0.0d,%exvr0.1d #
.i5: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-shiftcount-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 32 : INT
3 : isshiftcount(1, 2) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.2 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvashr(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
ashr:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.3D
exvr0.2 : exvr0.1D
out_tmap.0:
exvr0.0 : exvr0.3D
exvr0.1 : exvr0.2S
exvr0.2 : exvr0.1D
--
fixed_reg_mappings
--
.i0: movl %exvr0.1d,%exvr0.0d #
.i1: movl %exvr0.1d,%exvr0.2d #
.i2: movl %exvr0.3d,%exvr0.1d #
.i3: sarl %exvr0.1b,%exvr0.2d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i4: movl %exvr0.0d,%exvr0.1d #
.i5: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200011 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : call.8.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_8.0 : MEMLABEL
3 : mlcall.llvm.call_r_8.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : input.src.exreg.0.7 : BV:32
14 : input.src.exreg.0.8 : BV:32
15 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : BV:32
=src.llvm-mem
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_8.0 : MEMLABEL
3 : mlcall.llvm.call_r_8.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : input.src.exreg.0.7 : BV:32
14 : input.src.exreg.0.8 : BV:32
15 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_8:10
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff], exr0.7[0xffffffff], exr0.8[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff], exr0.7[0xffffffff], exr0.8[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
exvr0.6 : MEMLOC0x5
exvr0.7 : MEMLOC0x6
exvr0.8 : MEMLOC0x7
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
exvr0.6 : MEMLOC0x5
exvr0.7 : MEMLOC0x6
exvr0.8 : MEMLOC0x7
out_tmap.1:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
exvr0.6 : MEMLOC0x5
exvr0.7 : MEMLOC0x6
exvr0.8 : MEMLOC0x7
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200010 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : call.7.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_7.0 : MEMLABEL
3 : mlcall.llvm.call_r_7.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : input.src.exreg.0.7 : BV:32
14 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13) : BV:32
=src.llvm-mem
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_7.0 : MEMLABEL
3 : mlcall.llvm.call_r_7.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : input.src.exreg.0.7 : BV:32
14 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_7:9
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff], exr0.7[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff], exr0.7[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
exvr0.6 : MEMLOC0x5
exvr0.7 : MEMLOC0x6
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
exvr0.6 : MEMLOC0x5
exvr0.7 : MEMLOC0x6
out_tmap.1:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
exvr0.6 : MEMLOC0x5
exvr0.7 : MEMLOC0x6
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200009 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : call.6.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_6.0 : MEMLABEL
3 : mlcall.llvm.call_r_6.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : BV:32
=src.llvm-mem
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_6.0 : MEMLABEL
3 : mlcall.llvm.call_r_6.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : input.src.exreg.0.6 : BV:32
13 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_6:8
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
exvr0.6 : MEMLOC0x5
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
exvr0.6 : MEMLOC0x5
out_tmap.1:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
exvr0.6 : MEMLOC0x5
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200008 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : call.5.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_5.0 : MEMLABEL
3 : mlcall.llvm.call_r_5.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) : BV:32
=src.llvm-mem
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_5.0 : MEMLABEL
3 : mlcall.llvm.call_r_5.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : input.src.exreg.0.5 : BV:32
12 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_5:7
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
out_tmap.1:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
exvr0.5 : MEMLOC0x4
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200007 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : call.4.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_4.0 : MEMLABEL
3 : mlcall.llvm.call_r_4.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) : BV:32
=src.llvm-mem
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_4.0 : MEMLABEL
3 : mlcall.llvm.call_r_4.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : input.src.exreg.0.4 : BV:32
11 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_4:6
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
out_tmap.1:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
exvr0.4 : MEMLOC0x3
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200006 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : call.3.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_3.0 : MEMLABEL
3 : mlcall.llvm.call_r_3.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9) : BV:32
=src.llvm-mem
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_3.0 : MEMLABEL
3 : mlcall.llvm.call_r_3.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : input.src.exreg.0.3 : BV:32
10 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_3:5
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
out_tmap.1:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
exvr0.3 : MEMLOC0x2
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200005 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : call.2.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_2.0 : MEMLABEL
3 : mlcall.llvm.call_r_2.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : function_call(1, 2, 3, 4, 5, 6, 7, 8) : BV:32
=src.llvm-mem
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_2.0 : MEMLABEL
3 : mlcall.llvm.call_r_2.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : input.src.exreg.0.2 : BV:32
9 : function_call(1, 2, 3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_2:4
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
out_tmap.1:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
exvr0.2 : MEMLOC0x1
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200004 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : call.1.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32 -> BV:32]
2 : mlcall.llvm.call_r_1.0 : MEMLABEL
3 : mlcall.llvm.call_r_1.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 7) : BV:32
=src.llvm-mem
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_1.0 : MEMLABEL
3 : mlcall.llvm.call_r_1.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.1 : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_1:3
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : MEMLOC0x0
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
out_tmap.1:
exvr0.0 : exvr0.0S
exvr0.1 : MEMLOC0x0
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200003 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : call.0.reg : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID -> BV:32]
2 : mlcall.llvm.call_r_0.0 : MEMLABEL
3 : mlcall.llvm.call_r_0.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 1 : REGID
7 : function_call(1, 2, 3, 4, 5, 6) : BV:32
=src.llvm-mem
1 : call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_r_0.0 : MEMLABEL
3 : mlcall.llvm.call_r_0.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : function_call(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_r_0:2
--
live : exr0.0[0xffffffff],# exr0.0[0xffffffff],#
memlive : false
--
in_tmap:
out_tmap.0:
exvr0.0 : exvr0.0S
out_tmap.1:
exvr0.0 : exvr0.0S
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200011 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : call.8.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_8.0 : MEMLABEL
3 : mlcall.llvm.call_8.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : input.src.exreg.0.3 : BV:32
11 : input.src.exreg.0.4 : BV:32
12 : input.src.exreg.0.5 : BV:32
13 : input.src.exreg.0.6 : BV:32
14 : input.src.exreg.0.7 : BV:32
15 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_8:10
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff], exr0.7[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff], exr0.7[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
exvr0.5 : MEMLOC0x5
exvr0.6 : MEMLOC0x6
exvr0.7 : MEMLOC0x7
out_tmap.0:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
exvr0.5 : MEMLOC0x5
exvr0.6 : MEMLOC0x6
exvr0.7 : MEMLOC0x7
out_tmap.1:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
exvr0.5 : MEMLOC0x5
exvr0.6 : MEMLOC0x6
exvr0.7 : MEMLOC0x7
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200010 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : call.7.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_7.0 : MEMLABEL
3 : mlcall.llvm.call_7.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : input.src.exreg.0.3 : BV:32
11 : input.src.exreg.0.4 : BV:32
12 : input.src.exreg.0.5 : BV:32
13 : input.src.exreg.0.6 : BV:32
14 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_7:9
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff], exr0.6[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
exvr0.5 : MEMLOC0x5
exvr0.6 : MEMLOC0x6
out_tmap.0:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
exvr0.5 : MEMLOC0x5
exvr0.6 : MEMLOC0x6
out_tmap.1:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
exvr0.5 : MEMLOC0x5
exvr0.6 : MEMLOC0x6
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200009 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : call.6.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_6.0 : MEMLABEL
3 : mlcall.llvm.call_6.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : input.src.exreg.0.3 : BV:32
11 : input.src.exreg.0.4 : BV:32
12 : input.src.exreg.0.5 : BV:32
13 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_6:8
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff], exr0.5[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
exvr0.5 : MEMLOC0x5
out_tmap.0:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
exvr0.5 : MEMLOC0x5
out_tmap.1:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
exvr0.5 : MEMLOC0x5
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200008 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : call.5.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_5.0 : MEMLABEL
3 : mlcall.llvm.call_5.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : input.src.exreg.0.3 : BV:32
11 : input.src.exreg.0.4 : BV:32
12 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_5:7
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff], exr0.4[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
out_tmap.0:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
out_tmap.1:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
exvr0.4 : MEMLOC0x4
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200007 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : call.4.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_4.0 : MEMLABEL
3 : mlcall.llvm.call_4.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : input.src.exreg.0.3 : BV:32
11 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_4:6
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff], exr0.3[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
out_tmap.0:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
out_tmap.1:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
exvr0.3 : MEMLOC0x3
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200006 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : call.3.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_3.0 : MEMLABEL
3 : mlcall.llvm.call_3.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : input.src.exreg.0.2 : BV:32
10 : function_call(1, 2, 3, 4, 5, 6, 7, 8, 9) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_3:5
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
out_tmap.0:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
out_tmap.1:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
exvr0.2 : MEMLOC0x2
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200005 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : call.2.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_2.0 : MEMLABEL
3 : mlcall.llvm.call_2.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : input.src.exreg.0.1 : BV:32
9 : function_call(1, 2, 3, 4, 5, 6, 7, 8) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_2:4
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],# exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
out_tmap.0:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
out_tmap.1:
exvr0.0 : MEMLOC0x0
exvr0.1 : MEMLOC0x1
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200004 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : call.1.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID,BV:32 -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_1.0 : MEMLABEL
3 : mlcall.llvm.call_1.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : input.src.exreg.0.0 : BV:32
8 : function_call(1, 2, 3, 4, 5, 6, 7) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_1:3
--
live : exr0.0[0xffffffff],# exr0.0[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : MEMLOC0x0
out_tmap.0:
exvr0.0 : MEMLOC0x0
out_tmap.1:
exvr0.0 : MEMLOC0x0
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=tfg_edge
L0%1%200003 => L0%1%300004
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.llvm-mem
1 : call.0.mem : FUNCTION[MEMLABEL,MEMLABEL,ARRAY[BV:32 -> BV:8],BV:32,REGID -> ARRAY[BV:32 -> BV:8]]
2 : mlcall.llvm.call_0.0 : MEMLABEL
3 : mlcall.llvm.call_0.1 : MEMLABEL
4 : input.src.llvm-mem : ARRAY[BV:32 -> BV:8]
5 : nextpc_const.1 : BV:32
6 : 0 : REGID
7 : function_call(1, 2, 3, 4, 5, 6) : ARRAY[BV:32 -> BV:8]
=pcrel_val
0
=pcrel_tag
tag_var
=pcrel_val
1
=pcrel_tag
tag_var
=comment
call_0:2
--
live :##
memlive : false
--
in_tmap:
out_tmap.0:
out_tmap.1:
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.1d,%exvr0.3d #
.i1: movl %exvr0.2d,%exvr0.5d #
.i2: calll .NEXTPC0x0 #,%exvr0.4d,%exvr4.2,%exvr0.2d,%exvr0.1d,%exvr0.0d
.i3: movl %exvr0.5d,%exvr0.2d #
.i4: movl %exvr0.3d,%exvr0.1d #
.i5: jmp .NEXTPC0x1 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.2 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvudiv(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
udiv_i32:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.2D
exvr0.2 : exvr0.5D
out_tmap.0:
exvr0.0 : exvr0.2D
exvr0.1 : exvr0.0S
exvr0.2 : exvr0.5D
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.2d,%exvr0.1d #
.i1: pushl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i2: movl %exvr0.2d,%exvr0.3d #
.i3: movl %exvr0.5d,%exvr0.0d #
.i4: xorl %exvr0.2d,%exvr0.2d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i5: divl %exvr0.3d #,%exvr0.0d,%exvr0.2d,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i6: popl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i7: movl %exvr0.1d,%exvr0.2d #
.i8: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : const.0 : BV:32
3 : bvudiv(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
udiv_i:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.5D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.5D
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.2d,%exvr0.1d #
.i1: pushl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i2: movl $C0,%exvr0.3d #
.i3: movl %exvr0.5d,%exvr0.0d #
.i4: movl $0x0,%exvr0.2d #
.i5: divl %exvr0.3d #,%exvr0.0d,%exvr0.2d,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i6: popl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i7: movl %exvr0.1d,%exvr0.2d #
.i8: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.exreg.0.1 : BV:32
5 : const.0 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL
=precondition.1
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.2
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvsdiv(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sdiv_i32:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.2D
exvr0.1 : exvr0.5D
out_tmap.0:
exvr0.0 : exvr0.2D
exvr0.1 : exvr0.5D
exvr0.2 : exvr0.0S
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.2d,%exvr0.1d #
.i1: pushl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i2: movl %exvr0.2d,%exvr0.3d #
.i3: movl %exvr0.5d,%exvr0.0d #
.i4: cltd  #%exvr0.0d,%exvr0.2d
.i5: idivl %exvr0.3d #,%exvr0.0d,%exvr0.2d,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i6: popl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i7: movl %exvr0.1d,%exvr0.2d #
.i8: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.exreg.0.0 : BV:32
5 : const.1 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL
=precondition.1
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.0 : BV:32
2 : const.0 : BV:32
3 : bvsdiv(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
sdiv_i:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.5D
out_tmap.0:
exvr0.0 : exvr0.5D
exvr0.1 : exvr0.0S
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.2d,%exvr0.1d #
.i1: pushl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i2: movl $C0,%exvr0.3d #
.i3: movl %exvr0.5d,%exvr0.0d #
.i4: cltd  #%exvr0.0d,%exvr0.2d
.i5: idivl %exvr0.3d #,%exvr0.0d,%exvr0.2d,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i6: popl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i7: movl %exvr0.1d,%exvr0.2d #
.i8: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.2 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvurem(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
urem_i32:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.2D
exvr0.2 : exvr0.5D
out_tmap.0:
exvr0.0 : exvr0.2D
exvr0.1 : exvr0.0S
exvr0.2 : exvr0.5D
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.2d,%exvr0.1d #
.i1: pushl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i2: movl %exvr0.2d,%exvr0.3d #
.i3: movl %exvr0.5d,%exvr0.0d #
.i4: xorl %exvr0.2d,%exvr0.2d #,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i5: divl %exvr0.3d #,%exvr0.0d,%exvr0.2d,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i6: movl %exvr0.2d,%exvr0.0d #
.i7: popl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i8: movl %exvr0.1d,%exvr0.2d #
.i9: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.0
1 : input.src.exreg.0.1 : BV:32
2 : const.0 : BV:32
3 : bvurem(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
urem_i:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.1 : exvr0.5D
out_tmap.0:
exvr0.0 : exvr0.0S
exvr0.1 : exvr0.5D
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.2d,%exvr0.1d #
.i1: pushl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i2: movl $C0,%exvr0.3d #
.i3: movl %exvr0.5d,%exvr0.0d #
.i4: movl $0x0,%exvr0.2d #
.i5: divl %exvr0.3d #,%exvr0.0d,%exvr0.2d,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i6: movl %exvr0.2d,%exvr0.0d #
.i7: popl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i8: movl %exvr0.1d,%exvr0.2d #
.i9: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.exreg.0.1 : BV:32
5 : const.0 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL
=precondition.1
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : input.src.exreg.0.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.2
1 : input.src.exreg.0.1 : BV:32
2 : input.src.exreg.0.0 : BV:32
3 : bvsrem(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
srem_i32:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff], exr0.2[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.2D
exvr0.1 : exvr0.5D
out_tmap.0:
exvr0.0 : exvr0.2D
exvr0.1 : exvr0.5D
exvr0.2 : exvr0.0S
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.2d,%exvr0.1d #
.i1: pushl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i2: movl %exvr0.2d,%exvr0.3d #
.i3: movl %exvr0.5d,%exvr0.0d #
.i4: cltd  #%exvr0.0d,%exvr0.2d
.i5: idivl %exvr0.3d #,%exvr0.0d,%exvr0.2d,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i6: movl %exvr0.2d,%exvr0.0d #
.i7: popl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i8: movl %exvr0.1d,%exvr0.2d #
.i9: jmp .NEXTPC0x0 #
==

ENTRY:
=etfg_insn
=precondition.0
=Comment
undef-behaviour-div-no-overflow-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : input.src.exreg.0.0 : BV:32
5 : const.1 : BV:32
6 : eq(4, 5) : BOOL
7 : and(3, 6) : BOOL
8 : not(7) : BOOL
=RhsExpr
1 : 1 : BOOL
=precondition.1
=Comment
undef-behaviour-divbyzero-assume
=Status
A
=LocalSprelAssumptions:
=Guard
(epsilon)
=LhsExpr
1 : const.0 : BV:32
2 : 0 : BV:32
3 : eq(1, 2) : BOOL
4 : not(3) : BOOL
=RhsExpr
1 : 1 : BOOL
=tfg_edge
L0%1%1 => L0%2%1
=tfg_edge_EdgeCond:
1 : 1 : BOOL
=tfg_edge_StateTo:
=src.exreg.0.1
1 : input.src.exreg.0.0 : BV:32
2 : const.0 : BV:32
3 : bvsrem(1, 2) : BV:32
=pcrel_val
0
=pcrel_tag
tag_var
=comment
srem_i:1
--
live : exr0.0[0xffffffff], exr0.1[0xffffffff],#
memlive : false
--
in_tmap:
exvr0.0 : exvr0.5D
out_tmap.0:
exvr0.0 : exvr0.5D
exvr0.1 : exvr0.0S
--
fixed_reg_mappings
0 : 4 : 4
--
.i0: movl %exvr0.2d,%exvr0.1d #
.i1: pushl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i2: movl $C0,%exvr0.3d #
.i3: movl %exvr0.5d,%exvr0.0d #
.i4: cltd  #%exvr0.0d,%exvr0.2d
.i5: idivl %exvr0.3d #,%exvr0.0d,%exvr0.2d,%exvr5.0,%exvr6.0,%exvr7.0,%exvr8.0,%exvr9.0,%exvr10.0,%exvr11.0,%exvr12.0,%exvr13.0,%exvr14.0,%exvr15.0
.i6: movl %exvr0.2d,%exvr0.0d #
.i7: popl %exvr0.3d #,%exvr0.4d,%exvr4.2
.i8: movl %exvr0.1d,%exvr0.2d #
.i9: jmp .NEXTPC0x0 #
==

